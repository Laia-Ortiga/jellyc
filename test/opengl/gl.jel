module gl

public extern function gladLoadGL(loadproc function(name *char) -> function()) -> i32

public extern mut glad_glAccum function(op i32, value f32)
public extern mut glad_glActiveShaderProgram function(pipeline i32, program i32)
public extern mut glad_glActiveTexture function(texture i32)
public extern mut glad_glAlphaFunc function(func i32, ref f32)
public extern mut glad_glAreTexturesResident function(n i32, textures *i32, residences *mut bool) -> bool
public extern mut glad_glArrayElement function(i i32)
public extern mut glad_glAttachShader function(program i32, shader i32)
public extern mut glad_glBegin function(mode i32)
public extern mut glad_glBeginConditionalRender function(id i32, mode i32)
public extern mut glad_glBeginQuery function(target i32, id i32)
public extern mut glad_glBeginQueryIndexed function(target i32, index i32, id i32)
public extern mut glad_glBeginTransformFeedback function(primitiveMode i32)
public extern mut glad_glBindAttribLocation function(program i32, index i32, name *char)
public extern mut glad_glBindBuffer function(target i32, buffer i32)
public extern mut glad_glBindBufferBase function(target i32, index i32, buffer i32)
public extern mut glad_glBindBufferRange function(target i32, index i32, buffer i32, offset isize, size isize)
public extern mut glad_glBindBuffersBase function(target i32, first i32, count i32, buffers *i32)
public extern mut glad_glBindBuffersRange function(target i32, first i32, count i32, buffers *i32, offsets *isize, sizes *isize)
public extern mut glad_glBindFragDataLocation function(program i32, color i32, name *char)
public extern mut glad_glBindFragDataLocationIndexed function(program i32, colorNumber i32, index i32, name *char)
public extern mut glad_glBindFramebuffer function(target i32, framebuffer i32)
public extern mut glad_glBindImageTexture function(unit i32, texture i32, level i32, layered bool, layer i32, access i32, format i32)
public extern mut glad_glBindImageTextures function(first i32, count i32, textures *i32)
public extern mut glad_glBindProgramPipeline function(pipeline i32)
public extern mut glad_glBindRenderbuffer function(target i32, renderbuffer i32)
public extern mut glad_glBindSampler function(unit i32, sampler i32)
public extern mut glad_glBindSamplers function(first i32, count i32, samplers *i32)
public extern mut glad_glBindTexture function(target i32, texture i32)
public extern mut glad_glBindTextureUnit function(unit i32, texture i32)
public extern mut glad_glBindTextures function(first i32, count i32, textures *i32)
public extern mut glad_glBindTransformFeedback function(target i32, id i32)
public extern mut glad_glBindVertexArray function(array i32)
public extern mut glad_glBindVertexBuffer function(bindingindex i32, buffer i32, offset isize, stride i32)
public extern mut glad_glBindVertexBuffers function(first i32, count i32, buffers *i32, offsets *isize, strides *i32)
public extern mut glad_glBitmap function(width i32, height i32, xorig f32, yorig f32, xmove f32, ymove f32, bitmap *i8)
public extern mut glad_glBlendColor function(red f32, green f32, blue f32, alpha f32)
public extern mut glad_glBlendEquation function(mode i32)
public extern mut glad_glBlendEquationSeparate function(modeRGB i32, modeAlpha i32)
public extern mut glad_glBlendEquationSeparatei function(buf i32, modeRGB i32, modeAlpha i32)
public extern mut glad_glBlendEquationi function(buf i32, mode i32)
public extern mut glad_glBlendFunc function(sfactor i32, dfactor i32)
public extern mut glad_glBlendFuncSeparate function(sfactorRGB i32, dfactorRGB i32, sfactorAlpha i32, dfactorAlpha i32)
public extern mut glad_glBlendFuncSeparatei function(buf i32, srcRGB i32, dstRGB i32, srcAlpha i32, dstAlpha i32)
public extern mut glad_glBlendFunci function(buf i32, src i32, dst i32)
public extern mut glad_glBlitFramebuffer function(srcX0 i32, srcY0 i32, srcX1 i32, srcY1 i32, dstX0 i32, dstY0 i32, dstX1 i32, dstY1 i32, mask i32, filter i32)
public extern mut glad_glBlitNamedFramebuffer function(readFramebuffer i32, drawFramebuffer i32, srcX0 i32, srcY0 i32, srcX1 i32, srcY1 i32, dstX0 i32, dstY0 i32, dstX1 i32, dstY1 i32, mask i32, filter i32)
public extern mut glad_glBufferData function(target i32, size isize, data *mut byte, usage i32)
public extern mut glad_glBufferStorage function(target i32, size isize, data *mut byte, flags i32)
public extern mut glad_glBufferSubData function(target i32, offset isize, size isize, data *mut byte)
public extern mut glad_glCallList function(list i32)
public extern mut glad_glCallLists function(n i32, type i32, lists *mut byte)
public extern mut glad_glCheckFramebufferStatus function(target i32) -> i32
public extern mut glad_glCheckNamedFramebufferStatus function(framebuffer i32, target i32) -> i32
public extern mut glad_glClampColor function(target i32, clamp i32)
public extern mut glad_glClear function(mask i32)
public extern mut glad_glClearAccum function(red f32, green f32, blue f32, alpha f32)
public extern mut glad_glClearBufferData function(target i32, internalformat i32, format i32, type i32, data *mut byte)
public extern mut glad_glClearBufferSubData function(target i32, internalformat i32, offset isize, size isize, format i32, type i32, data *mut byte)
public extern mut glad_glClearBufferfi function(buffer i32, drawbuffer i32, depth f32, stencil i32)
public extern mut glad_glClearBufferfv function(buffer i32, drawbuffer i32, value *f32)
public extern mut glad_glClearBufferiv function(buffer i32, drawbuffer i32, value *i32)
public extern mut glad_glClearBufferuiv function(buffer i32, drawbuffer i32, value *i32)
public extern mut glad_glClearColor function(red f32, green f32, blue f32, alpha f32)
public extern mut glad_glClearDepth function(depth f64)
public extern mut glad_glClearDepthf function(d f32)
public extern mut glad_glClearIndex function(c f32)
public extern mut glad_glClearNamedBufferData function(buffer i32, internalformat i32, format i32, type i32, data *mut byte)
public extern mut glad_glClearNamedBufferSubData function(buffer i32, internalformat i32, offset isize, size isize, format i32, type i32, data *mut byte)
public extern mut glad_glClearNamedFramebufferfi function(framebuffer i32, buffer i32, drawbuffer i32, depth f32, stencil i32)
public extern mut glad_glClearNamedFramebufferfv function(framebuffer i32, buffer i32, drawbuffer i32, value *f32)
public extern mut glad_glClearNamedFramebufferiv function(framebuffer i32, buffer i32, drawbuffer i32, value *i32)
public extern mut glad_glClearNamedFramebufferuiv function(framebuffer i32, buffer i32, drawbuffer i32, value *i32)
public extern mut glad_glClearStencil function(s i32)
public extern mut glad_glClearTexImage function(texture i32, level i32, format i32, type i32, data *mut byte)
public extern mut glad_glClearTexSubImage function(texture i32, level i32, xoffset i32, yoffset i32, zoffset i32, width i32, height i32, depth i32, format i32, type i32, data *mut byte)
public extern mut glad_glClientActiveTexture function(texture i32)
public extern mut glad_glClientWaitSync function(sync *mut byte, flags i32, timeout i64) -> i32
public extern mut glad_glClipControl function(origin i32, depth i32)
public extern mut glad_glClipPlane function(plane i32, equation *f64)
public extern mut glad_glColor3b function(red i8, green i8, blue i8)
public extern mut glad_glColor3bv function(v *i8)
public extern mut glad_glColor3d function(red f64, green f64, blue f64)
public extern mut glad_glColor3dv function(v *f64)
public extern mut glad_glColor3f function(red f32, green f32, blue f32)
public extern mut glad_glColor3fv function(v *f32)
public extern mut glad_glColor3i function(red i32, green i32, blue i32)
public extern mut glad_glColor3iv function(v *i32)
public extern mut glad_glColor3s function(red i16, green i16, blue i16)
public extern mut glad_glColor3sv function(v *i16)
public extern mut glad_glColor3ub function(red i8, green i8, blue i8)
public extern mut glad_glColor3ubv function(v *i8)
public extern mut glad_glColor3ui function(red i32, green i32, blue i32)
public extern mut glad_glColor3uiv function(v *i32)
public extern mut glad_glColor3us function(red i16, green i16, blue i16)
public extern mut glad_glColor3usv function(v *i16)
public extern mut glad_glColor4b function(red i8, green i8, blue i8, alpha i8)
public extern mut glad_glColor4bv function(v *i8)
public extern mut glad_glColor4d function(red f64, green f64, blue f64, alpha f64)
public extern mut glad_glColor4dv function(v *f64)
public extern mut glad_glColor4f function(red f32, green f32, blue f32, alpha f32)
public extern mut glad_glColor4fv function(v *f32)
public extern mut glad_glColor4i function(red i32, green i32, blue i32, alpha i32)
public extern mut glad_glColor4iv function(v *i32)
public extern mut glad_glColor4s function(red i16, green i16, blue i16, alpha i16)
public extern mut glad_glColor4sv function(v *i16)
public extern mut glad_glColor4ub function(red i8, green i8, blue i8, alpha i8)
public extern mut glad_glColor4ubv function(v *i8)
public extern mut glad_glColor4ui function(red i32, green i32, blue i32, alpha i32)
public extern mut glad_glColor4uiv function(v *i32)
public extern mut glad_glColor4us function(red i16, green i16, blue i16, alpha i16)
public extern mut glad_glColor4usv function(v *i16)
public extern mut glad_glColorMask function(red bool, green bool, blue bool, alpha bool)
public extern mut glad_glColorMaski function(index i32, r bool, g bool, b bool, a bool)
public extern mut glad_glColorMaterial function(face i32, mode i32)
public extern mut glad_glColorP3ui function(type i32, color i32)
public extern mut glad_glColorP3uiv function(type i32, color *i32)
public extern mut glad_glColorP4ui function(type i32, color i32)
public extern mut glad_glColorP4uiv function(type i32, color *i32)
public extern mut glad_glColorPointer function(size i32, type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glCompileShader function(shader i32)
public extern mut glad_glCompressedTexImage1D function(target i32, level i32, internalformat i32, width i32, border i32, imageSize i32, data *mut byte)
public extern mut glad_glCompressedTexImage2D function(target i32, level i32, internalformat i32, width i32, height i32, border i32, imageSize i32, data *mut byte)
public extern mut glad_glCompressedTexImage3D function(target i32, level i32, internalformat i32, width i32, height i32, depth i32, border i32, imageSize i32, data *mut byte)
public extern mut glad_glCompressedTexSubImage1D function(target i32, level i32, xoffset i32, width i32, format i32, imageSize i32, data *mut byte)
public extern mut glad_glCompressedTexSubImage2D function(target i32, level i32, xoffset i32, yoffset i32, width i32, height i32, format i32, imageSize i32, data *mut byte)
public extern mut glad_glCompressedTexSubImage3D function(target i32, level i32, xoffset i32, yoffset i32, zoffset i32, width i32, height i32, depth i32, format i32, imageSize i32, data *mut byte)
public extern mut glad_glCompressedTextureSubImage1D function(texture i32, level i32, xoffset i32, width i32, format i32, imageSize i32, data *mut byte)
public extern mut glad_glCompressedTextureSubImage2D function(texture i32, level i32, xoffset i32, yoffset i32, width i32, height i32, format i32, imageSize i32, data *mut byte)
public extern mut glad_glCompressedTextureSubImage3D function(texture i32, level i32, xoffset i32, yoffset i32, zoffset i32, width i32, height i32, depth i32, format i32, imageSize i32, data *mut byte)
public extern mut glad_glCopyBufferSubData function(readTarget i32, writeTarget i32, readOffset isize, writeOffset isize, size isize)
public extern mut glad_glCopyImageSubData function(srcName i32, srcTarget i32, srcLevel i32, srcX i32, srcY i32, srcZ i32, dstName i32, dstTarget i32, dstLevel i32, dstX i32, dstY i32, dstZ i32, srcWidth i32, srcHeight i32, srcDepth i32)
public extern mut glad_glCopyNamedBufferSubData function(readBuffer i32, writeBuffer i32, readOffset isize, writeOffset isize, size isize)
public extern mut glad_glCopyPixels function(x i32, y i32, width i32, height i32, type i32)
public extern mut glad_glCopyTexImage1D function(target i32, level i32, internalformat i32, x i32, y i32, width i32, border i32)
public extern mut glad_glCopyTexImage2D function(target i32, level i32, internalformat i32, x i32, y i32, width i32, height i32, border i32)
public extern mut glad_glCopyTexSubImage1D function(target i32, level i32, xoffset i32, x i32, y i32, width i32)
public extern mut glad_glCopyTexSubImage2D function(target i32, level i32, xoffset i32, yoffset i32, x i32, y i32, width i32, height i32)
public extern mut glad_glCopyTexSubImage3D function(target i32, level i32, xoffset i32, yoffset i32, zoffset i32, x i32, y i32, width i32, height i32)
public extern mut glad_glCopyTextureSubImage1D function(texture i32, level i32, xoffset i32, x i32, y i32, width i32)
public extern mut glad_glCopyTextureSubImage2D function(texture i32, level i32, xoffset i32, yoffset i32, x i32, y i32, width i32, height i32)
public extern mut glad_glCopyTextureSubImage3D function(texture i32, level i32, xoffset i32, yoffset i32, zoffset i32, x i32, y i32, width i32, height i32)
public extern mut glad_glCreateBuffers function(n i32, buffers *mut i32)
public extern mut glad_glCreateFramebuffers function(n i32, framebuffers *mut i32)
public extern mut glad_glCreateProgram function() -> i32
public extern mut glad_glCreateProgramPipelines function(n i32, pipelines *mut i32)
public extern mut glad_glCreateQueries function(target i32, n i32, ids *mut i32)
public extern mut glad_glCreateRenderbuffers function(n i32, renderbuffers *mut i32)
public extern mut glad_glCreateSamplers function(n i32, samplers *mut i32)
public extern mut glad_glCreateShader function(type i32) -> i32
public extern mut glad_glCreateShaderProgramv function(type i32, count i32, strings **char) -> i32
public extern mut glad_glCreateTextures function(target i32, n i32, textures *mut i32)
public extern mut glad_glCreateTransformFeedbacks function(n i32, ids *mut i32)
public extern mut glad_glCreateVertexArrays function(n i32, arrays *mut i32)
public extern mut glad_glCullFace function(mode i32)
public extern mut glad_glDebugMessageCallback function(callback function(source i32, type i32, id i32, severity i32, length i32, message *char, userParam *mut byte), userParam *mut byte)
public extern mut glad_glDebugMessageControl function(source i32, type i32, severity i32, count i32, ids *i32, enabled bool)
public extern mut glad_glDebugMessageInsert function(source i32, type i32, id i32, severity i32, length i32, buf *char)
public extern mut glad_glDeleteBuffers function(n i32, buffers *i32)
public extern mut glad_glDeleteFramebuffers function(n i32, framebuffers *i32)
public extern mut glad_glDeleteLists function(list i32, range i32)
public extern mut glad_glDeleteProgram function(program i32)
public extern mut glad_glDeleteProgramPipelines function(n i32, pipelines *i32)
public extern mut glad_glDeleteQueries function(n i32, ids *i32)
public extern mut glad_glDeleteRenderbuffers function(n i32, renderbuffers *i32)
public extern mut glad_glDeleteSamplers function(count i32, samplers *i32)
public extern mut glad_glDeleteShader function(shader i32)
public extern mut glad_glDeleteSync function(sync *mut byte)
public extern mut glad_glDeleteTextures function(n i32, textures *i32)
public extern mut glad_glDeleteTransformFeedbacks function(n i32, ids *i32)
public extern mut glad_glDeleteVertexArrays function(n i32, arrays *i32)
public extern mut glad_glDepthFunc function(func i32)
public extern mut glad_glDepthMask function(flag bool)
public extern mut glad_glDepthRange function(n f64, f f64)
public extern mut glad_glDepthRangeArrayv function(first i32, count i32, v *f64)
public extern mut glad_glDepthRangeIndexed function(index i32, n f64, f f64)
public extern mut glad_glDepthRangef function(n f32, f f32)
public extern mut glad_glDetachShader function(program i32, shader i32)
public extern mut glad_glDisable function(cap i32)
public extern mut glad_glDisableClientState function(array i32)
public extern mut glad_glDisableVertexArrayAttrib function(vaobj i32, index i32)
public extern mut glad_glDisableVertexAttribArray function(index i32)
public extern mut glad_glDisablei function(target i32, index i32)
public extern mut glad_glDispatchCompute function(num_groups_x i32, num_groups_y i32, num_groups_z i32)
public extern mut glad_glDispatchComputeIndirect function(indirect isize)
public extern mut glad_glDrawArrays function(mode i32, first i32, count i32)
public extern mut glad_glDrawArraysIndirect function(mode i32, indirect *mut byte)
public extern mut glad_glDrawArraysInstanced function(mode i32, first i32, count i32, instancecount i32)
public extern mut glad_glDrawArraysInstancedBaseInstance function(mode i32, first i32, count i32, instancecount i32, baseinstance i32)
public extern mut glad_glDrawBuffer function(buf i32)
public extern mut glad_glDrawBuffers function(n i32, bufs *i32)
public extern mut glad_glDrawElements function(mode i32, count i32, type i32, indices *mut byte)
public extern mut glad_glDrawElementsBaseVertex function(mode i32, count i32, type i32, indices *mut byte, basevertex i32)
public extern mut glad_glDrawElementsIndirect function(mode i32, type i32, indirect *mut byte)
public extern mut glad_glDrawElementsInstanced function(mode i32, count i32, type i32, indices *mut byte, instancecount i32)
public extern mut glad_glDrawElementsInstancedBaseInstance function(mode i32, count i32, type i32, indices *mut byte, instancecount i32, baseinstance i32)
public extern mut glad_glDrawElementsInstancedBaseVertex function(mode i32, count i32, type i32, indices *mut byte, instancecount i32, basevertex i32)
public extern mut glad_glDrawElementsInstancedBaseVertexBaseInstance function(mode i32, count i32, type i32, indices *mut byte, instancecount i32, basevertex i32, baseinstance i32)
public extern mut glad_glDrawPixels function(width i32, height i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glDrawRangeElements function(mode i32, start i32, end i32, count i32, type i32, indices *mut byte)
public extern mut glad_glDrawRangeElementsBaseVertex function(mode i32, start i32, end i32, count i32, type i32, indices *mut byte, basevertex i32)
public extern mut glad_glDrawTransformFeedback function(mode i32, id i32)
public extern mut glad_glDrawTransformFeedbackInstanced function(mode i32, id i32, instancecount i32)
public extern mut glad_glDrawTransformFeedbackStream function(mode i32, id i32, stream i32)
public extern mut glad_glDrawTransformFeedbackStreamInstanced function(mode i32, id i32, stream i32, instancecount i32)
public extern mut glad_glEdgeFlag function(flag bool)
public extern mut glad_glEdgeFlagPointer function(stride i32, pointer_ *mut byte)
public extern mut glad_glEdgeFlagv function(flag *bool)
public extern mut glad_glEnable function(cap i32)
public extern mut glad_glEnableClientState function(array i32)
public extern mut glad_glEnableVertexArrayAttrib function(vaobj i32, index i32)
public extern mut glad_glEnableVertexAttribArray function(index i32)
public extern mut glad_glEnablei function(target i32, index i32)
public extern mut glad_glEnd function()
public extern mut glad_glEndConditionalRender function()
public extern mut glad_glEndList function()
public extern mut glad_glEndQuery function(target i32)
public extern mut glad_glEndQueryIndexed function(target i32, index i32)
public extern mut glad_glEndTransformFeedback function()
public extern mut glad_glEvalCoord1d function(u f64)
public extern mut glad_glEvalCoord1dv function(u *f64)
public extern mut glad_glEvalCoord1f function(u f32)
public extern mut glad_glEvalCoord1fv function(u *f32)
public extern mut glad_glEvalCoord2d function(u f64, v f64)
public extern mut glad_glEvalCoord2dv function(u *f64)
public extern mut glad_glEvalCoord2f function(u f32, v f32)
public extern mut glad_glEvalCoord2fv function(u *f32)
public extern mut glad_glEvalMesh1 function(mode i32, i1 i32, i2 i32)
public extern mut glad_glEvalMesh2 function(mode i32, i1 i32, i2 i32, j1 i32, j2 i32)
public extern mut glad_glEvalPoint1 function(i i32)
public extern mut glad_glEvalPoint2 function(i i32, j i32)
public extern mut glad_glFeedbackBuffer function(size i32, type i32, buffer *mut f32)
public extern mut glad_glFenceSync function(condition i32, flags i32) -> *mut byte
public extern mut glad_glFinish function()
public extern mut glad_glFlush function()
public extern mut glad_glFlushMappedBufferRange function(target i32, offset isize, length isize)
public extern mut glad_glFlushMappedNamedBufferRange function(buffer i32, offset isize, length isize)
public extern mut glad_glFogCoordPointer function(type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glFogCoordd function(coord f64)
public extern mut glad_glFogCoorddv function(coord *f64)
public extern mut glad_glFogCoordf function(coord f32)
public extern mut glad_glFogCoordfv function(coord *f32)
public extern mut glad_glFogf function(pname i32, param f32)
public extern mut glad_glFogfv function(pname i32, params *f32)
public extern mut glad_glFogi function(pname i32, param i32)
public extern mut glad_glFogiv function(pname i32, params *i32)
public extern mut glad_glFramebufferParameteri function(target i32, pname i32, param i32)
public extern mut glad_glFramebufferRenderbuffer function(target i32, attachment i32, renderbuffertarget i32, renderbuffer i32)
public extern mut glad_glFramebufferTexture function(target i32, attachment i32, texture i32, level i32)
public extern mut glad_glFramebufferTexture1D function(target i32, attachment i32, textarget i32, texture i32, level i32)
public extern mut glad_glFramebufferTexture2D function(target i32, attachment i32, textarget i32, texture i32, level i32)
public extern mut glad_glFramebufferTexture3D function(target i32, attachment i32, textarget i32, texture i32, level i32, zoffset i32)
public extern mut glad_glFramebufferTextureLayer function(target i32, attachment i32, texture i32, level i32, layer i32)
public extern mut glad_glFrontFace function(mode i32)
public extern mut glad_glFrustum function(left f64, right f64, bottom f64, top f64, zNear f64, zFar f64)
public extern mut glad_glGenBuffers function(n i32, buffers *mut i32)
public extern mut glad_glGenFramebuffers function(n i32, framebuffers *mut i32)
public extern mut glad_glGenLists function(range i32) -> i32
public extern mut glad_glGenProgramPipelines function(n i32, pipelines *mut i32)
public extern mut glad_glGenQueries function(n i32, ids *mut i32)
public extern mut glad_glGenRenderbuffers function(n i32, renderbuffers *mut i32)
public extern mut glad_glGenSamplers function(count i32, samplers *mut i32)
public extern mut glad_glGenTextures function(n i32, textures *mut i32)
public extern mut glad_glGenTransformFeedbacks function(n i32, ids *mut i32)
public extern mut glad_glGenVertexArrays function(n i32, arrays *mut i32)
public extern mut glad_glGenerateMipmap function(target i32)
public extern mut glad_glGenerateTextureMipmap function(texture i32)
public extern mut glad_glGetActiveAtomicCounterBufferiv function(program i32, bufferIndex i32, pname i32, params *mut i32)
public extern mut glad_glGetActiveAttrib function(program i32, index i32, bufSize i32, length *mut i32, size *mut i32, type *mut i32, name *mut char)
public extern mut glad_glGetActiveSubroutineName function(program i32, shadertype i32, index i32, bufSize i32, length *mut i32, name *mut char)
public extern mut glad_glGetActiveSubroutineUniformName function(program i32, shadertype i32, index i32, bufSize i32, length *mut i32, name *mut char)
public extern mut glad_glGetActiveSubroutineUniformiv function(program i32, shadertype i32, index i32, pname i32, values *mut i32)
public extern mut glad_glGetActiveUniform function(program i32, index i32, bufSize i32, length *mut i32, size *mut i32, type *mut i32, name *mut char)
public extern mut glad_glGetActiveUniformBlockName function(program i32, uniformBlockIndex i32, bufSize i32, length *mut i32, uniformBlockName *mut char)
public extern mut glad_glGetActiveUniformBlockiv function(program i32, uniformBlockIndex i32, pname i32, params *mut i32)
public extern mut glad_glGetActiveUniformName function(program i32, uniformIndex i32, bufSize i32, length *mut i32, uniformName *mut char)
public extern mut glad_glGetActiveUniformsiv function(program i32, uniformCount i32, uniformIndices *i32, pname i32, params *mut i32)
public extern mut glad_glGetAttachedShaders function(program i32, maxCount i32, count *mut i32, shaders *mut i32)
public extern mut glad_glGetAttribLocation function(program i32, name *char) -> i32
public extern mut glad_glGetBooleani_v function(target i32, index i32, data *mut bool)
public extern mut glad_glGetBooleanv function(pname i32, data *mut bool)
public extern mut glad_glGetBufferParameteri64v function(target i32, pname i32, params *mut i64)
public extern mut glad_glGetBufferParameteriv function(target i32, pname i32, params *mut i32)
public extern mut glad_glGetBufferPointerv function(target i32, pname i32, params **mut byte)
public extern mut glad_glGetBufferSubData function(target i32, offset isize, size isize, data *mut byte)
public extern mut glad_glGetClipPlane function(plane i32, equation *mut f64)
public extern mut glad_glGetCompressedTexImage function(target i32, level i32, img *mut byte)
public extern mut glad_glGetCompressedTextureImage function(texture i32, level i32, bufSize i32, pixels *mut byte)
public extern mut glad_glGetCompressedTextureSubImage function(texture i32, level i32, xoffset i32, yoffset i32, zoffset i32, width i32, height i32, depth i32, bufSize i32, pixels *mut byte)
public extern mut glad_glGetDebugMessageLog function(count i32, bufSize i32, sources *mut i32, types *mut i32, ids *mut i32, severities *mut i32, lengths *mut i32, messageLog *mut char) -> i32
public extern mut glad_glGetDoublei_v function(target i32, index i32, data *mut f64)
public extern mut glad_glGetDoublev function(pname i32, data *mut f64)
public extern mut glad_glGetError function() -> i32
public extern mut glad_glGetFloati_v function(target i32, index i32, data *mut f32)
public extern mut glad_glGetFloatv function(pname i32, data *mut f32)
public extern mut glad_glGetFragDataIndex function(program i32, name *char) -> i32
public extern mut glad_glGetFragDataLocation function(program i32, name *char) -> i32
public extern mut glad_glGetFramebufferAttachmentParameteriv function(target i32, attachment i32, pname i32, params *mut i32)
public extern mut glad_glGetFramebufferParameteriv function(target i32, pname i32, params *mut i32)
public extern mut glad_glGetGraphicsResetStatus function() -> i32
public extern mut glad_glGetInteger64i_v function(target i32, index i32, data *mut i64)
public extern mut glad_glGetInteger64v function(pname i32, data *mut i64)
public extern mut glad_glGetIntegeri_v function(target i32, index i32, data *mut i32)
public extern mut glad_glGetIntegerv function(pname i32, data *mut i32)
public extern mut glad_glGetInternalformati64v function(target i32, internalformat i32, pname i32, count i32, params *mut i64)
public extern mut glad_glGetInternalformativ function(target i32, internalformat i32, pname i32, count i32, params *mut i32)
public extern mut glad_glGetLightfv function(light i32, pname i32, params *mut f32)
public extern mut glad_glGetLightiv function(light i32, pname i32, params *mut i32)
public extern mut glad_glGetMapdv function(target i32, query i32, v *mut f64)
public extern mut glad_glGetMapfv function(target i32, query i32, v *mut f32)
public extern mut glad_glGetMapiv function(target i32, query i32, v *mut i32)
public extern mut glad_glGetMaterialfv function(face i32, pname i32, params *mut f32)
public extern mut glad_glGetMaterialiv function(face i32, pname i32, params *mut i32)
public extern mut glad_glGetMultisamplefv function(pname i32, index i32, val *mut f32)
public extern mut glad_glGetNamedBufferParameteri64v function(buffer i32, pname i32, params *mut i64)
public extern mut glad_glGetNamedBufferParameteriv function(buffer i32, pname i32, params *mut i32)
public extern mut glad_glGetNamedBufferPointerv function(buffer i32, pname i32, params **mut byte)
public extern mut glad_glGetNamedBufferSubData function(buffer i32, offset isize, size isize, data *mut byte)
public extern mut glad_glGetNamedFramebufferAttachmentParameteriv function(framebuffer i32, attachment i32, pname i32, params *mut i32)
public extern mut glad_glGetNamedFramebufferParameteriv function(framebuffer i32, pname i32, param *mut i32)
public extern mut glad_glGetNamedRenderbufferParameteriv function(renderbuffer i32, pname i32, params *mut i32)
public extern mut glad_glGetObjectLabel function(identifier i32, name i32, bufSize i32, length *mut i32, label *mut char)
public extern mut glad_glGetObjectPtrLabel function(ptr *mut byte, bufSize i32, length *mut i32, label *mut char)
public extern mut glad_glGetPixelMapfv function(map i32, values *mut f32)
public extern mut glad_glGetPixelMapuiv function(map i32, values *mut i32)
public extern mut glad_glGetPixelMapusv function(map i32, values *mut i16)
public extern mut glad_glGetPointerv function(pname i32, params **mut byte)
public extern mut glad_glGetPolygonStipple function(mask *mut i8)
public extern mut glad_glGetProgramBinary function(program i32, bufSize i32, length *mut i32, binaryFormat *mut i32, binary *mut byte)
public extern mut glad_glGetProgramInfoLog function(program i32, bufSize i32, length *mut i32, infoLog *mut char)
public extern mut glad_glGetProgramInterfaceiv function(program i32, programInterface i32, pname i32, params *mut i32)
public extern mut glad_glGetProgramPipelineInfoLog function(pipeline i32, bufSize i32, length *mut i32, infoLog *mut char)
public extern mut glad_glGetProgramPipelineiv function(pipeline i32, pname i32, params *mut i32)
public extern mut glad_glGetProgramResourceIndex function(program i32, programInterface i32, name *char) -> i32
public extern mut glad_glGetProgramResourceLocation function(program i32, programInterface i32, name *char) -> i32
public extern mut glad_glGetProgramResourceLocationIndex function(program i32, programInterface i32, name *char) -> i32
public extern mut glad_glGetProgramResourceName function(program i32, programInterface i32, index i32, bufSize i32, length *mut i32, name *mut char)
public extern mut glad_glGetProgramResourceiv function(program i32, programInterface i32, index i32, propCount i32, props *i32, count i32, length *mut i32, params *mut i32)
public extern mut glad_glGetProgramStageiv function(program i32, shadertype i32, pname i32, values *mut i32)
public extern mut glad_glGetProgramiv function(program i32, pname i32, params *mut i32)
public extern mut glad_glGetQueryBufferObjecti64v function(id i32, buffer i32, pname i32, offset isize)
public extern mut glad_glGetQueryBufferObjectiv function(id i32, buffer i32, pname i32, offset isize)
public extern mut glad_glGetQueryBufferObjectui64v function(id i32, buffer i32, pname i32, offset isize)
public extern mut glad_glGetQueryBufferObjectuiv function(id i32, buffer i32, pname i32, offset isize)
public extern mut glad_glGetQueryIndexediv function(target i32, index i32, pname i32, params *mut i32)
public extern mut glad_glGetQueryObjecti64v function(id i32, pname i32, params *mut i64)
public extern mut glad_glGetQueryObjectiv function(id i32, pname i32, params *mut i32)
public extern mut glad_glGetQueryObjectui64v function(id i32, pname i32, params *mut i64)
public extern mut glad_glGetQueryObjectuiv function(id i32, pname i32, params *mut i32)
public extern mut glad_glGetQueryiv function(target i32, pname i32, params *mut i32)
public extern mut glad_glGetRenderbufferParameteriv function(target i32, pname i32, params *mut i32)
public extern mut glad_glGetSamplerParameterIiv function(sampler i32, pname i32, params *mut i32)
public extern mut glad_glGetSamplerParameterIuiv function(sampler i32, pname i32, params *mut i32)
public extern mut glad_glGetSamplerParameterfv function(sampler i32, pname i32, params *mut f32)
public extern mut glad_glGetSamplerParameteriv function(sampler i32, pname i32, params *mut i32)
public extern mut glad_glGetShaderInfoLog function(shader i32, bufSize i32, length *mut i32, infoLog *mut char)
public extern mut glad_glGetShaderPrecisionFormat function(shadertype i32, precisiontype i32, range *mut i32, precision *mut i32)
public extern mut glad_glGetShaderSource function(shader i32, bufSize i32, length *mut i32, source *mut char)
public extern mut glad_glGetShaderiv function(shader i32, pname i32, params *mut i32)
public extern mut glad_glGetString function(name i32) -> i8
public extern mut glad_glGetStringi function(name i32, index i32) -> i8
public extern mut glad_glGetSubroutineIndex function(program i32, shadertype i32, name *char) -> i32
public extern mut glad_glGetSubroutineUniformLocation function(program i32, shadertype i32, name *char) -> i32
public extern mut glad_glGetSynciv function(sync *mut byte, pname i32, count i32, length *mut i32, values *mut i32)
public extern mut glad_glGetTexEnvfv function(target i32, pname i32, params *mut f32)
public extern mut glad_glGetTexEnviv function(target i32, pname i32, params *mut i32)
public extern mut glad_glGetTexGendv function(coord i32, pname i32, params *mut f64)
public extern mut glad_glGetTexGenfv function(coord i32, pname i32, params *mut f32)
public extern mut glad_glGetTexGeniv function(coord i32, pname i32, params *mut i32)
public extern mut glad_glGetTexImage function(target i32, level i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glGetTexLevelParameterfv function(target i32, level i32, pname i32, params *mut f32)
public extern mut glad_glGetTexLevelParameteriv function(target i32, level i32, pname i32, params *mut i32)
public extern mut glad_glGetTexParameterIiv function(target i32, pname i32, params *mut i32)
public extern mut glad_glGetTexParameterIuiv function(target i32, pname i32, params *mut i32)
public extern mut glad_glGetTexParameterfv function(target i32, pname i32, params *mut f32)
public extern mut glad_glGetTexParameteriv function(target i32, pname i32, params *mut i32)
public extern mut glad_glGetTextureImage function(texture i32, level i32, format i32, type i32, bufSize i32, pixels *mut byte)
public extern mut glad_glGetTextureLevelParameterfv function(texture i32, level i32, pname i32, params *mut f32)
public extern mut glad_glGetTextureLevelParameteriv function(texture i32, level i32, pname i32, params *mut i32)
public extern mut glad_glGetTextureParameterIiv function(texture i32, pname i32, params *mut i32)
public extern mut glad_glGetTextureParameterIuiv function(texture i32, pname i32, params *mut i32)
public extern mut glad_glGetTextureParameterfv function(texture i32, pname i32, params *mut f32)
public extern mut glad_glGetTextureParameteriv function(texture i32, pname i32, params *mut i32)
public extern mut glad_glGetTextureSubImage function(texture i32, level i32, xoffset i32, yoffset i32, zoffset i32, width i32, height i32, depth i32, format i32, type i32, bufSize i32, pixels *mut byte)
public extern mut glad_glGetTransformFeedbackVarying function(program i32, index i32, bufSize i32, length *mut i32, size *mut i32, type *mut i32, name *mut char)
public extern mut glad_glGetTransformFeedbacki64_v function(xfb i32, pname i32, index i32, param *mut i64)
public extern mut glad_glGetTransformFeedbacki_v function(xfb i32, pname i32, index i32, param *mut i32)
public extern mut glad_glGetTransformFeedbackiv function(xfb i32, pname i32, param *mut i32)
public extern mut glad_glGetUniformBlockIndex function(program i32, uniformBlockName *char) -> i32
public extern mut glad_glGetUniformIndices function(program i32, uniformCount i32, uniformNames **char, uniformIndices *mut i32)
public extern mut glad_glGetUniformLocation function(program i32, name *char) -> i32
public extern mut glad_glGetUniformSubroutineuiv function(shadertype i32, location i32, params *mut i32)
public extern mut glad_glGetUniformdv function(program i32, location i32, params *mut f64)
public extern mut glad_glGetUniformfv function(program i32, location i32, params *mut f32)
public extern mut glad_glGetUniformiv function(program i32, location i32, params *mut i32)
public extern mut glad_glGetUniformuiv function(program i32, location i32, params *mut i32)
public extern mut glad_glGetVertexArrayIndexed64iv function(vaobj i32, index i32, pname i32, param *mut i64)
public extern mut glad_glGetVertexArrayIndexediv function(vaobj i32, index i32, pname i32, param *mut i32)
public extern mut glad_glGetVertexArrayiv function(vaobj i32, pname i32, param *mut i32)
public extern mut glad_glGetVertexAttribIiv function(index i32, pname i32, params *mut i32)
public extern mut glad_glGetVertexAttribIuiv function(index i32, pname i32, params *mut i32)
public extern mut glad_glGetVertexAttribLdv function(index i32, pname i32, params *mut f64)
public extern mut glad_glGetVertexAttribPointerv function(index i32, pname i32, pointer_ **mut byte)
public extern mut glad_glGetVertexAttribdv function(index i32, pname i32, params *mut f64)
public extern mut glad_glGetVertexAttribfv function(index i32, pname i32, params *mut f32)
public extern mut glad_glGetVertexAttribiv function(index i32, pname i32, params *mut i32)
public extern mut glad_glGetnColorTable function(target i32, format i32, type i32, bufSize i32, table *mut byte)
public extern mut glad_glGetnCompressedTexImage function(target i32, lod i32, bufSize i32, pixels *mut byte)
public extern mut glad_glGetnConvolutionFilter function(target i32, format i32, type i32, bufSize i32, image *mut byte)
public extern mut glad_glGetnHistogram function(target i32, reset bool, format i32, type i32, bufSize i32, values *mut byte)
public extern mut glad_glGetnMapdv function(target i32, query i32, bufSize i32, v *mut f64)
public extern mut glad_glGetnMapfv function(target i32, query i32, bufSize i32, v *mut f32)
public extern mut glad_glGetnMapiv function(target i32, query i32, bufSize i32, v *mut i32)
public extern mut glad_glGetnMinmax function(target i32, reset bool, format i32, type i32, bufSize i32, values *mut byte)
public extern mut glad_glGetnPixelMapfv function(map i32, bufSize i32, values *mut f32)
public extern mut glad_glGetnPixelMapuiv function(map i32, bufSize i32, values *mut i32)
public extern mut glad_glGetnPixelMapusv function(map i32, bufSize i32, values *mut i16)
public extern mut glad_glGetnPolygonStipple function(bufSize i32, pattern *mut i8)
public extern mut glad_glGetnSeparableFilter function(target i32, format i32, type i32, rowBufSize i32, row *mut byte, columnBufSize i32, column *mut byte, span *mut byte)
public extern mut glad_glGetnTexImage function(target i32, level i32, format i32, type i32, bufSize i32, pixels *mut byte)
public extern mut glad_glGetnUniformdv function(program i32, location i32, bufSize i32, params *mut f64)
public extern mut glad_glGetnUniformfv function(program i32, location i32, bufSize i32, params *mut f32)
public extern mut glad_glGetnUniformiv function(program i32, location i32, bufSize i32, params *mut i32)
public extern mut glad_glGetnUniformuiv function(program i32, location i32, bufSize i32, params *mut i32)
public extern mut glad_glHint function(target i32, mode i32)
public extern mut glad_glIndexMask function(mask i32)
public extern mut glad_glIndexPointer function(type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glIndexd function(c f64)
public extern mut glad_glIndexdv function(c *f64)
public extern mut glad_glIndexf function(c f32)
public extern mut glad_glIndexfv function(c *f32)
public extern mut glad_glIndexi function(c i32)
public extern mut glad_glIndexiv function(c *i32)
public extern mut glad_glIndexs function(c i16)
public extern mut glad_glIndexsv function(c *i16)
public extern mut glad_glIndexub function(c i8)
public extern mut glad_glIndexubv function(c *i8)
public extern mut glad_glInitNames function()
public extern mut glad_glInterleavedArrays function(format i32, stride i32, pointer_ *mut byte)
public extern mut glad_glInvalidateBufferData function(buffer i32)
public extern mut glad_glInvalidateBufferSubData function(buffer i32, offset isize, length isize)
public extern mut glad_glInvalidateFramebuffer function(target i32, numAttachments i32, attachments *i32)
public extern mut glad_glInvalidateNamedFramebufferData function(framebuffer i32, numAttachments i32, attachments *i32)
public extern mut glad_glInvalidateNamedFramebufferSubData function(framebuffer i32, numAttachments i32, attachments *i32, x i32, y i32, width i32, height i32)
public extern mut glad_glInvalidateSubFramebuffer function(target i32, numAttachments i32, attachments *i32, x i32, y i32, width i32, height i32)
public extern mut glad_glInvalidateTexImage function(texture i32, level i32)
public extern mut glad_glInvalidateTexSubImage function(texture i32, level i32, xoffset i32, yoffset i32, zoffset i32, width i32, height i32, depth i32)
public extern mut glad_glIsBuffer function(buffer i32) -> bool
public extern mut glad_glIsEnabled function(cap i32) -> bool
public extern mut glad_glIsEnabledi function(target i32, index i32) -> bool
public extern mut glad_glIsFramebuffer function(framebuffer i32) -> bool
public extern mut glad_glIsList function(list i32) -> bool
public extern mut glad_glIsProgram function(program i32) -> bool
public extern mut glad_glIsProgramPipeline function(pipeline i32) -> bool
public extern mut glad_glIsQuery function(id i32) -> bool
public extern mut glad_glIsRenderbuffer function(renderbuffer i32) -> bool
public extern mut glad_glIsSampler function(sampler i32) -> bool
public extern mut glad_glIsShader function(shader i32) -> bool
public extern mut glad_glIsSync function(sync *mut byte) -> bool
public extern mut glad_glIsTexture function(texture i32) -> bool
public extern mut glad_glIsTransformFeedback function(id i32) -> bool
public extern mut glad_glIsVertexArray function(array i32) -> bool
public extern mut glad_glLightModelf function(pname i32, param f32)
public extern mut glad_glLightModelfv function(pname i32, params *f32)
public extern mut glad_glLightModeli function(pname i32, param i32)
public extern mut glad_glLightModeliv function(pname i32, params *i32)
public extern mut glad_glLightf function(light i32, pname i32, param f32)
public extern mut glad_glLightfv function(light i32, pname i32, params *f32)
public extern mut glad_glLighti function(light i32, pname i32, param i32)
public extern mut glad_glLightiv function(light i32, pname i32, params *i32)
public extern mut glad_glLineStipple function(factor i32, pattern i16)
public extern mut glad_glLineWidth function(width f32)
public extern mut glad_glLinkProgram function(program i32)
public extern mut glad_glListBase function(base i32)
public extern mut glad_glLoadIdentity function()
public extern mut glad_glLoadMatrixd function(m *f64)
public extern mut glad_glLoadMatrixf function(m *f32)
public extern mut glad_glLoadName function(name i32)
public extern mut glad_glLoadTransposeMatrixd function(m *f64)
public extern mut glad_glLoadTransposeMatrixf function(m *f32)
public extern mut glad_glLogicOp function(opcode i32)
public extern mut glad_glMap1d function(target i32, u1 f64, u2 f64, stride i32, order i32, points *f64)
public extern mut glad_glMap1f function(target i32, u1 f32, u2 f32, stride i32, order i32, points *f32)
public extern mut glad_glMap2d function(target i32, u1 f64, u2 f64, ustride i32, uorder i32, v1 f64, v2 f64, vstride i32, vorder i32, points *f64)
public extern mut glad_glMap2f function(target i32, u1 f32, u2 f32, ustride i32, uorder i32, v1 f32, v2 f32, vstride i32, vorder i32, points *f32)
public extern mut glad_glMapBuffer function(target i32, access i32) -> *mut byte
public extern mut glad_glMapBufferRange function(target i32, offset isize, length isize, access i32) -> *mut byte
public extern mut glad_glMapGrid1d function(un i32, u1 f64, u2 f64)
public extern mut glad_glMapGrid1f function(un i32, u1 f32, u2 f32)
public extern mut glad_glMapGrid2d function(un i32, u1 f64, u2 f64, vn i32, v1 f64, v2 f64)
public extern mut glad_glMapGrid2f function(un i32, u1 f32, u2 f32, vn i32, v1 f32, v2 f32)
public extern mut glad_glMapNamedBuffer function(buffer i32, access i32) -> *mut byte
public extern mut glad_glMapNamedBufferRange function(buffer i32, offset isize, length isize, access i32) -> *mut byte
public extern mut glad_glMaterialf function(face i32, pname i32, param f32)
public extern mut glad_glMaterialfv function(face i32, pname i32, params *f32)
public extern mut glad_glMateriali function(face i32, pname i32, param i32)
public extern mut glad_glMaterialiv function(face i32, pname i32, params *i32)
public extern mut glad_glMatrixMode function(mode i32)
public extern mut glad_glMemoryBarrier function(barriers i32)
public extern mut glad_glMemoryBarrierByRegion function(barriers i32)
public extern mut glad_glMinSampleShading function(value f32)
public extern mut glad_glMultMatrixd function(m *f64)
public extern mut glad_glMultMatrixf function(m *f32)
public extern mut glad_glMultTransposeMatrixd function(m *f64)
public extern mut glad_glMultTransposeMatrixf function(m *f32)
public extern mut glad_glMultiDrawArrays function(mode i32, first *i32, count *i32, drawcount i32)
public extern mut glad_glMultiDrawArraysIndirect function(mode i32, indirect *mut byte, drawcount i32, stride i32)
public extern mut glad_glMultiDrawArraysIndirectCount function(mode i32, indirect *mut byte, drawcount isize, maxdrawcount i32, stride i32)
public extern mut glad_glMultiDrawElements function(mode i32, count *i32, type i32, indices **mut byte, drawcount i32)
public extern mut glad_glMultiDrawElementsBaseVertex function(mode i32, count *i32, type i32, indices **mut byte, drawcount i32, basevertex *i32)
public extern mut glad_glMultiDrawElementsIndirect function(mode i32, type i32, indirect *mut byte, drawcount i32, stride i32)
public extern mut glad_glMultiDrawElementsIndirectCount function(mode i32, type i32, indirect *mut byte, drawcount isize, maxdrawcount i32, stride i32)
public extern mut glad_glMultiTexCoord1d function(target i32, s f64)
public extern mut glad_glMultiTexCoord1dv function(target i32, v *f64)
public extern mut glad_glMultiTexCoord1f function(target i32, s f32)
public extern mut glad_glMultiTexCoord1fv function(target i32, v *f32)
public extern mut glad_glMultiTexCoord1i function(target i32, s i32)
public extern mut glad_glMultiTexCoord1iv function(target i32, v *i32)
public extern mut glad_glMultiTexCoord1s function(target i32, s i16)
public extern mut glad_glMultiTexCoord1sv function(target i32, v *i16)
public extern mut glad_glMultiTexCoord2d function(target i32, s f64, t f64)
public extern mut glad_glMultiTexCoord2dv function(target i32, v *f64)
public extern mut glad_glMultiTexCoord2f function(target i32, s f32, t f32)
public extern mut glad_glMultiTexCoord2fv function(target i32, v *f32)
public extern mut glad_glMultiTexCoord2i function(target i32, s i32, t i32)
public extern mut glad_glMultiTexCoord2iv function(target i32, v *i32)
public extern mut glad_glMultiTexCoord2s function(target i32, s i16, t i16)
public extern mut glad_glMultiTexCoord2sv function(target i32, v *i16)
public extern mut glad_glMultiTexCoord3d function(target i32, s f64, t f64, r f64)
public extern mut glad_glMultiTexCoord3dv function(target i32, v *f64)
public extern mut glad_glMultiTexCoord3f function(target i32, s f32, t f32, r f32)
public extern mut glad_glMultiTexCoord3fv function(target i32, v *f32)
public extern mut glad_glMultiTexCoord3i function(target i32, s i32, t i32, r i32)
public extern mut glad_glMultiTexCoord3iv function(target i32, v *i32)
public extern mut glad_glMultiTexCoord3s function(target i32, s i16, t i16, r i16)
public extern mut glad_glMultiTexCoord3sv function(target i32, v *i16)
public extern mut glad_glMultiTexCoord4d function(target i32, s f64, t f64, r f64, q f64)
public extern mut glad_glMultiTexCoord4dv function(target i32, v *f64)
public extern mut glad_glMultiTexCoord4f function(target i32, s f32, t f32, r f32, q f32)
public extern mut glad_glMultiTexCoord4fv function(target i32, v *f32)
public extern mut glad_glMultiTexCoord4i function(target i32, s i32, t i32, r i32, q i32)
public extern mut glad_glMultiTexCoord4iv function(target i32, v *i32)
public extern mut glad_glMultiTexCoord4s function(target i32, s i16, t i16, r i16, q i16)
public extern mut glad_glMultiTexCoord4sv function(target i32, v *i16)
public extern mut glad_glMultiTexCoordP1ui function(texture i32, type i32, coords i32)
public extern mut glad_glMultiTexCoordP1uiv function(texture i32, type i32, coords *i32)
public extern mut glad_glMultiTexCoordP2ui function(texture i32, type i32, coords i32)
public extern mut glad_glMultiTexCoordP2uiv function(texture i32, type i32, coords *i32)
public extern mut glad_glMultiTexCoordP3ui function(texture i32, type i32, coords i32)
public extern mut glad_glMultiTexCoordP3uiv function(texture i32, type i32, coords *i32)
public extern mut glad_glMultiTexCoordP4ui function(texture i32, type i32, coords i32)
public extern mut glad_glMultiTexCoordP4uiv function(texture i32, type i32, coords *i32)
public extern mut glad_glNamedBufferData function(buffer i32, size isize, data *mut byte, usage i32)
public extern mut glad_glNamedBufferStorage function(buffer i32, size isize, data *mut byte, flags i32)
public extern mut glad_glNamedBufferSubData function(buffer i32, offset isize, size isize, data *mut byte)
public extern mut glad_glNamedFramebufferDrawBuffer function(framebuffer i32, buf i32)
public extern mut glad_glNamedFramebufferDrawBuffers function(framebuffer i32, n i32, bufs *i32)
public extern mut glad_glNamedFramebufferParameteri function(framebuffer i32, pname i32, param i32)
public extern mut glad_glNamedFramebufferReadBuffer function(framebuffer i32, src i32)
public extern mut glad_glNamedFramebufferRenderbuffer function(framebuffer i32, attachment i32, renderbuffertarget i32, renderbuffer i32)
public extern mut glad_glNamedFramebufferTexture function(framebuffer i32, attachment i32, texture i32, level i32)
public extern mut glad_glNamedFramebufferTextureLayer function(framebuffer i32, attachment i32, texture i32, level i32, layer i32)
public extern mut glad_glNamedRenderbufferStorage function(renderbuffer i32, internalformat i32, width i32, height i32)
public extern mut glad_glNamedRenderbufferStorageMultisample function(renderbuffer i32, samples i32, internalformat i32, width i32, height i32)
public extern mut glad_glNewList function(list i32, mode i32)
public extern mut glad_glNormal3b function(nx i8, ny i8, nz i8)
public extern mut glad_glNormal3bv function(v *i8)
public extern mut glad_glNormal3d function(nx f64, ny f64, nz f64)
public extern mut glad_glNormal3dv function(v *f64)
public extern mut glad_glNormal3f function(nx f32, ny f32, nz f32)
public extern mut glad_glNormal3fv function(v *f32)
public extern mut glad_glNormal3i function(nx i32, ny i32, nz i32)
public extern mut glad_glNormal3iv function(v *i32)
public extern mut glad_glNormal3s function(nx i16, ny i16, nz i16)
public extern mut glad_glNormal3sv function(v *i16)
public extern mut glad_glNormalP3ui function(type i32, coords i32)
public extern mut glad_glNormalP3uiv function(type i32, coords *i32)
public extern mut glad_glNormalPointer function(type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glObjectLabel function(identifier i32, name i32, length i32, label *char)
public extern mut glad_glObjectPtrLabel function(ptr *mut byte, length i32, label *char)
public extern mut glad_glOrtho function(left f64, right f64, bottom f64, top f64, zNear f64, zFar f64)
public extern mut glad_glPassThrough function(token f32)
public extern mut glad_glPatchParameterfv function(pname i32, values *f32)
public extern mut glad_glPatchParameteri function(pname i32, value i32)
public extern mut glad_glPauseTransformFeedback function()
public extern mut glad_glPixelMapfv function(map i32, mapsize i32, values *f32)
public extern mut glad_glPixelMapuiv function(map i32, mapsize i32, values *i32)
public extern mut glad_glPixelMapusv function(map i32, mapsize i32, values *i16)
public extern mut glad_glPixelStoref function(pname i32, param f32)
public extern mut glad_glPixelStorei function(pname i32, param i32)
public extern mut glad_glPixelTransferf function(pname i32, param f32)
public extern mut glad_glPixelTransferi function(pname i32, param i32)
public extern mut glad_glPixelZoom function(xfactor f32, yfactor f32)
public extern mut glad_glPointParameterf function(pname i32, param f32)
public extern mut glad_glPointParameterfv function(pname i32, params *f32)
public extern mut glad_glPointParameteri function(pname i32, param i32)
public extern mut glad_glPointParameteriv function(pname i32, params *i32)
public extern mut glad_glPointSize function(size f32)
public extern mut glad_glPolygonMode function(face i32, mode i32)
public extern mut glad_glPolygonOffset function(factor f32, units f32)
public extern mut glad_glPolygonOffsetClamp function(factor f32, units f32, clamp f32)
public extern mut glad_glPolygonStipple function(mask *i8)
public extern mut glad_glPopAttrib function()
public extern mut glad_glPopClientAttrib function()
public extern mut glad_glPopDebugGroup function()
public extern mut glad_glPopMatrix function()
public extern mut glad_glPopName function()
public extern mut glad_glPrimitiveRestartIndex function(index i32)
public extern mut glad_glPrioritizeTextures function(n i32, textures *i32, priorities *f32)
public extern mut glad_glProgramBinary function(program i32, binaryFormat i32, binary *mut byte, length i32)
public extern mut glad_glProgramParameteri function(program i32, pname i32, value i32)
public extern mut glad_glProgramUniform1d function(program i32, location i32, v0 f64)
public extern mut glad_glProgramUniform1dv function(program i32, location i32, count i32, value *f64)
public extern mut glad_glProgramUniform1f function(program i32, location i32, v0 f32)
public extern mut glad_glProgramUniform1fv function(program i32, location i32, count i32, value *f32)
public extern mut glad_glProgramUniform1i function(program i32, location i32, v0 i32)
public extern mut glad_glProgramUniform1iv function(program i32, location i32, count i32, value *i32)
public extern mut glad_glProgramUniform1ui function(program i32, location i32, v0 i32)
public extern mut glad_glProgramUniform1uiv function(program i32, location i32, count i32, value *i32)
public extern mut glad_glProgramUniform2d function(program i32, location i32, v0 f64, v1 f64)
public extern mut glad_glProgramUniform2dv function(program i32, location i32, count i32, value *f64)
public extern mut glad_glProgramUniform2f function(program i32, location i32, v0 f32, v1 f32)
public extern mut glad_glProgramUniform2fv function(program i32, location i32, count i32, value *f32)
public extern mut glad_glProgramUniform2i function(program i32, location i32, v0 i32, v1 i32)
public extern mut glad_glProgramUniform2iv function(program i32, location i32, count i32, value *i32)
public extern mut glad_glProgramUniform2ui function(program i32, location i32, v0 i32, v1 i32)
public extern mut glad_glProgramUniform2uiv function(program i32, location i32, count i32, value *i32)
public extern mut glad_glProgramUniform3d function(program i32, location i32, v0 f64, v1 f64, v2 f64)
public extern mut glad_glProgramUniform3dv function(program i32, location i32, count i32, value *f64)
public extern mut glad_glProgramUniform3f function(program i32, location i32, v0 f32, v1 f32, v2 f32)
public extern mut glad_glProgramUniform3fv function(program i32, location i32, count i32, value *f32)
public extern mut glad_glProgramUniform3i function(program i32, location i32, v0 i32, v1 i32, v2 i32)
public extern mut glad_glProgramUniform3iv function(program i32, location i32, count i32, value *i32)
public extern mut glad_glProgramUniform3ui function(program i32, location i32, v0 i32, v1 i32, v2 i32)
public extern mut glad_glProgramUniform3uiv function(program i32, location i32, count i32, value *i32)
public extern mut glad_glProgramUniform4d function(program i32, location i32, v0 f64, v1 f64, v2 f64, v3 f64)
public extern mut glad_glProgramUniform4dv function(program i32, location i32, count i32, value *f64)
public extern mut glad_glProgramUniform4f function(program i32, location i32, v0 f32, v1 f32, v2 f32, v3 f32)
public extern mut glad_glProgramUniform4fv function(program i32, location i32, count i32, value *f32)
public extern mut glad_glProgramUniform4i function(program i32, location i32, v0 i32, v1 i32, v2 i32, v3 i32)
public extern mut glad_glProgramUniform4iv function(program i32, location i32, count i32, value *i32)
public extern mut glad_glProgramUniform4ui function(program i32, location i32, v0 i32, v1 i32, v2 i32, v3 i32)
public extern mut glad_glProgramUniform4uiv function(program i32, location i32, count i32, value *i32)
public extern mut glad_glProgramUniformMatrix2dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix2fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProgramUniformMatrix2x3dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix2x3fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProgramUniformMatrix2x4dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix2x4fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProgramUniformMatrix3dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix3fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProgramUniformMatrix3x2dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix3x2fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProgramUniformMatrix3x4dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix3x4fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProgramUniformMatrix4dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix4fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProgramUniformMatrix4x2dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix4x2fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProgramUniformMatrix4x3dv function(program i32, location i32, count i32, transpose bool, value *f64)
public extern mut glad_glProgramUniformMatrix4x3fv function(program i32, location i32, count i32, transpose bool, value *f32)
public extern mut glad_glProvokingVertex function(mode i32)
public extern mut glad_glPushAttrib function(mask i32)
public extern mut glad_glPushClientAttrib function(mask i32)
public extern mut glad_glPushDebugGroup function(source i32, id i32, length i32, message *char)
public extern mut glad_glPushMatrix function()
public extern mut glad_glPushName function(name i32)
public extern mut glad_glQueryCounter function(id i32, target i32)
public extern mut glad_glRasterPos2d function(x f64, y f64)
public extern mut glad_glRasterPos2dv function(v *f64)
public extern mut glad_glRasterPos2f function(x f32, y f32)
public extern mut glad_glRasterPos2fv function(v *f32)
public extern mut glad_glRasterPos2i function(x i32, y i32)
public extern mut glad_glRasterPos2iv function(v *i32)
public extern mut glad_glRasterPos2s function(x i16, y i16)
public extern mut glad_glRasterPos2sv function(v *i16)
public extern mut glad_glRasterPos3d function(x f64, y f64, z f64)
public extern mut glad_glRasterPos3dv function(v *f64)
public extern mut glad_glRasterPos3f function(x f32, y f32, z f32)
public extern mut glad_glRasterPos3fv function(v *f32)
public extern mut glad_glRasterPos3i function(x i32, y i32, z i32)
public extern mut glad_glRasterPos3iv function(v *i32)
public extern mut glad_glRasterPos3s function(x i16, y i16, z i16)
public extern mut glad_glRasterPos3sv function(v *i16)
public extern mut glad_glRasterPos4d function(x f64, y f64, z f64, w f64)
public extern mut glad_glRasterPos4dv function(v *f64)
public extern mut glad_glRasterPos4f function(x f32, y f32, z f32, w f32)
public extern mut glad_glRasterPos4fv function(v *f32)
public extern mut glad_glRasterPos4i function(x i32, y i32, z i32, w i32)
public extern mut glad_glRasterPos4iv function(v *i32)
public extern mut glad_glRasterPos4s function(x i16, y i16, z i16, w i16)
public extern mut glad_glRasterPos4sv function(v *i16)
public extern mut glad_glReadBuffer function(src i32)
public extern mut glad_glReadPixels function(x i32, y i32, width i32, height i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glReadnPixels function(x i32, y i32, width i32, height i32, format i32, type i32, bufSize i32, data *mut byte)
public extern mut glad_glRectd function(x1 f64, y1 f64, x2 f64, y2 f64)
public extern mut glad_glRectdv function(v1 *f64, v2 *f64)
public extern mut glad_glRectf function(x1 f32, y1 f32, x2 f32, y2 f32)
public extern mut glad_glRectfv function(v1 *f32, v2 *f32)
public extern mut glad_glRecti function(x1 i32, y1 i32, x2 i32, y2 i32)
public extern mut glad_glRectiv function(v1 *i32, v2 *i32)
public extern mut glad_glRects function(x1 i16, y1 i16, x2 i16, y2 i16)
public extern mut glad_glRectsv function(v1 *i16, v2 *i16)
public extern mut glad_glReleaseShaderCompiler function()
public extern mut glad_glRenderMode function(mode i32) -> i32
public extern mut glad_glRenderbufferStorage function(target i32, internalformat i32, width i32, height i32)
public extern mut glad_glRenderbufferStorageMultisample function(target i32, samples i32, internalformat i32, width i32, height i32)
public extern mut glad_glResumeTransformFeedback function()
public extern mut glad_glRotated function(angle f64, x f64, y f64, z f64)
public extern mut glad_glRotatef function(angle f32, x f32, y f32, z f32)
public extern mut glad_glSampleCoverage function(value f32, invert bool)
public extern mut glad_glSampleMaski function(maskNumber i32, mask i32)
public extern mut glad_glSamplerParameterIiv function(sampler i32, pname i32, param *i32)
public extern mut glad_glSamplerParameterIuiv function(sampler i32, pname i32, param *i32)
public extern mut glad_glSamplerParameterf function(sampler i32, pname i32, param f32)
public extern mut glad_glSamplerParameterfv function(sampler i32, pname i32, param *f32)
public extern mut glad_glSamplerParameteri function(sampler i32, pname i32, param i32)
public extern mut glad_glSamplerParameteriv function(sampler i32, pname i32, param *i32)
public extern mut glad_glScaled function(x f64, y f64, z f64)
public extern mut glad_glScalef function(x f32, y f32, z f32)
public extern mut glad_glScissor function(x i32, y i32, width i32, height i32)
public extern mut glad_glScissorArrayv function(first i32, count i32, v *i32)
public extern mut glad_glScissorIndexed function(index i32, left i32, bottom i32, width i32, height i32)
public extern mut glad_glScissorIndexedv function(index i32, v *i32)
public extern mut glad_glSecondaryColor3b function(red i8, green i8, blue i8)
public extern mut glad_glSecondaryColor3bv function(v *i8)
public extern mut glad_glSecondaryColor3d function(red f64, green f64, blue f64)
public extern mut glad_glSecondaryColor3dv function(v *f64)
public extern mut glad_glSecondaryColor3f function(red f32, green f32, blue f32)
public extern mut glad_glSecondaryColor3fv function(v *f32)
public extern mut glad_glSecondaryColor3i function(red i32, green i32, blue i32)
public extern mut glad_glSecondaryColor3iv function(v *i32)
public extern mut glad_glSecondaryColor3s function(red i16, green i16, blue i16)
public extern mut glad_glSecondaryColor3sv function(v *i16)
public extern mut glad_glSecondaryColor3ub function(red i8, green i8, blue i8)
public extern mut glad_glSecondaryColor3ubv function(v *i8)
public extern mut glad_glSecondaryColor3ui function(red i32, green i32, blue i32)
public extern mut glad_glSecondaryColor3uiv function(v *i32)
public extern mut glad_glSecondaryColor3us function(red i16, green i16, blue i16)
public extern mut glad_glSecondaryColor3usv function(v *i16)
public extern mut glad_glSecondaryColorP3ui function(type i32, color i32)
public extern mut glad_glSecondaryColorP3uiv function(type i32, color *i32)
public extern mut glad_glSecondaryColorPointer function(size i32, type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glSelectBuffer function(size i32, buffer *mut i32)
public extern mut glad_glShadeModel function(mode i32)
public extern mut glad_glShaderBinary function(count i32, shaders *i32, binaryFormat i32, binary *mut byte, length i32)
public extern mut glad_glShaderSource function(shader i32, count i32, string **char, length *i32)
public extern mut glad_glShaderStorageBlockBinding function(program i32, storageBlockIndex i32, storageBlockBinding i32)
public extern mut glad_glSpecializeShader function(shader i32, pEntryPoint *char, numSpecializationConstants i32, pConstantIndex *i32, pConstantValue *i32)
public extern mut glad_glStencilFunc function(func i32, ref i32, mask i32)
public extern mut glad_glStencilFuncSeparate function(face i32, func i32, ref i32, mask i32)
public extern mut glad_glStencilMask function(mask i32)
public extern mut glad_glStencilMaskSeparate function(face i32, mask i32)
public extern mut glad_glStencilOp function(fail i32, zfail i32, zpass i32)
public extern mut glad_glStencilOpSeparate function(face i32, sfail i32, dpfail i32, dppass i32)
public extern mut glad_glTexBuffer function(target i32, internalformat i32, buffer i32)
public extern mut glad_glTexBufferRange function(target i32, internalformat i32, buffer i32, offset isize, size isize)
public extern mut glad_glTexCoord1d function(s f64)
public extern mut glad_glTexCoord1dv function(v *f64)
public extern mut glad_glTexCoord1f function(s f32)
public extern mut glad_glTexCoord1fv function(v *f32)
public extern mut glad_glTexCoord1i function(s i32)
public extern mut glad_glTexCoord1iv function(v *i32)
public extern mut glad_glTexCoord1s function(s i16)
public extern mut glad_glTexCoord1sv function(v *i16)
public extern mut glad_glTexCoord2d function(s f64, t f64)
public extern mut glad_glTexCoord2dv function(v *f64)
public extern mut glad_glTexCoord2f function(s f32, t f32)
public extern mut glad_glTexCoord2fv function(v *f32)
public extern mut glad_glTexCoord2i function(s i32, t i32)
public extern mut glad_glTexCoord2iv function(v *i32)
public extern mut glad_glTexCoord2s function(s i16, t i16)
public extern mut glad_glTexCoord2sv function(v *i16)
public extern mut glad_glTexCoord3d function(s f64, t f64, r f64)
public extern mut glad_glTexCoord3dv function(v *f64)
public extern mut glad_glTexCoord3f function(s f32, t f32, r f32)
public extern mut glad_glTexCoord3fv function(v *f32)
public extern mut glad_glTexCoord3i function(s i32, t i32, r i32)
public extern mut glad_glTexCoord3iv function(v *i32)
public extern mut glad_glTexCoord3s function(s i16, t i16, r i16)
public extern mut glad_glTexCoord3sv function(v *i16)
public extern mut glad_glTexCoord4d function(s f64, t f64, r f64, q f64)
public extern mut glad_glTexCoord4dv function(v *f64)
public extern mut glad_glTexCoord4f function(s f32, t f32, r f32, q f32)
public extern mut glad_glTexCoord4fv function(v *f32)
public extern mut glad_glTexCoord4i function(s i32, t i32, r i32, q i32)
public extern mut glad_glTexCoord4iv function(v *i32)
public extern mut glad_glTexCoord4s function(s i16, t i16, r i16, q i16)
public extern mut glad_glTexCoord4sv function(v *i16)
public extern mut glad_glTexCoordP1ui function(type i32, coords i32)
public extern mut glad_glTexCoordP1uiv function(type i32, coords *i32)
public extern mut glad_glTexCoordP2ui function(type i32, coords i32)
public extern mut glad_glTexCoordP2uiv function(type i32, coords *i32)
public extern mut glad_glTexCoordP3ui function(type i32, coords i32)
public extern mut glad_glTexCoordP3uiv function(type i32, coords *i32)
public extern mut glad_glTexCoordP4ui function(type i32, coords i32)
public extern mut glad_glTexCoordP4uiv function(type i32, coords *i32)
public extern mut glad_glTexCoordPointer function(size i32, type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glTexEnvf function(target i32, pname i32, param f32)
public extern mut glad_glTexEnvfv function(target i32, pname i32, params *f32)
public extern mut glad_glTexEnvi function(target i32, pname i32, param i32)
public extern mut glad_glTexEnviv function(target i32, pname i32, params *i32)
public extern mut glad_glTexGend function(coord i32, pname i32, param f64)
public extern mut glad_glTexGendv function(coord i32, pname i32, params *f64)
public extern mut glad_glTexGenf function(coord i32, pname i32, param f32)
public extern mut glad_glTexGenfv function(coord i32, pname i32, params *f32)
public extern mut glad_glTexGeni function(coord i32, pname i32, param i32)
public extern mut glad_glTexGeniv function(coord i32, pname i32, params *i32)
public extern mut glad_glTexImage1D function(target i32, level i32, internalformat i32, width i32, border i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTexImage2D function(target i32, level i32, internalformat i32, width i32, height i32, border i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTexImage2DMultisample function(target i32, samples i32, internalformat i32, width i32, height i32, fixedsamplelocations bool)
public extern mut glad_glTexImage3D function(target i32, level i32, internalformat i32, width i32, height i32, depth i32, border i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTexImage3DMultisample function(target i32, samples i32, internalformat i32, width i32, height i32, depth i32, fixedsamplelocations bool)
public extern mut glad_glTexParameterIiv function(target i32, pname i32, params *i32)
public extern mut glad_glTexParameterIuiv function(target i32, pname i32, params *i32)
public extern mut glad_glTexParameterf function(target i32, pname i32, param f32)
public extern mut glad_glTexParameterfv function(target i32, pname i32, params *f32)
public extern mut glad_glTexParameteri function(target i32, pname i32, param i32)
public extern mut glad_glTexParameteriv function(target i32, pname i32, params *i32)
public extern mut glad_glTexStorage1D function(target i32, levels i32, internalformat i32, width i32)
public extern mut glad_glTexStorage2D function(target i32, levels i32, internalformat i32, width i32, height i32)
public extern mut glad_glTexStorage2DMultisample function(target i32, samples i32, internalformat i32, width i32, height i32, fixedsamplelocations bool)
public extern mut glad_glTexStorage3D function(target i32, levels i32, internalformat i32, width i32, height i32, depth i32)
public extern mut glad_glTexStorage3DMultisample function(target i32, samples i32, internalformat i32, width i32, height i32, depth i32, fixedsamplelocations bool)
public extern mut glad_glTexSubImage1D function(target i32, level i32, xoffset i32, width i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTexSubImage2D function(target i32, level i32, xoffset i32, yoffset i32, width i32, height i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTexSubImage3D function(target i32, level i32, xoffset i32, yoffset i32, zoffset i32, width i32, height i32, depth i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTextureBarrier function()
public extern mut glad_glTextureBuffer function(texture i32, internalformat i32, buffer i32)
public extern mut glad_glTextureBufferRange function(texture i32, internalformat i32, buffer i32, offset isize, size isize)
public extern mut glad_glTextureParameterIiv function(texture i32, pname i32, params *i32)
public extern mut glad_glTextureParameterIuiv function(texture i32, pname i32, params *i32)
public extern mut glad_glTextureParameterf function(texture i32, pname i32, param f32)
public extern mut glad_glTextureParameterfv function(texture i32, pname i32, param *f32)
public extern mut glad_glTextureParameteri function(texture i32, pname i32, param i32)
public extern mut glad_glTextureParameteriv function(texture i32, pname i32, param *i32)
public extern mut glad_glTextureStorage1D function(texture i32, levels i32, internalformat i32, width i32)
public extern mut glad_glTextureStorage2D function(texture i32, levels i32, internalformat i32, width i32, height i32)
public extern mut glad_glTextureStorage2DMultisample function(texture i32, samples i32, internalformat i32, width i32, height i32, fixedsamplelocations bool)
public extern mut glad_glTextureStorage3D function(texture i32, levels i32, internalformat i32, width i32, height i32, depth i32)
public extern mut glad_glTextureStorage3DMultisample function(texture i32, samples i32, internalformat i32, width i32, height i32, depth i32, fixedsamplelocations bool)
public extern mut glad_glTextureSubImage1D function(texture i32, level i32, xoffset i32, width i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTextureSubImage2D function(texture i32, level i32, xoffset i32, yoffset i32, width i32, height i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTextureSubImage3D function(texture i32, level i32, xoffset i32, yoffset i32, zoffset i32, width i32, height i32, depth i32, format i32, type i32, pixels *mut byte)
public extern mut glad_glTextureView function(texture i32, target i32, origtexture i32, internalformat i32, minlevel i32, numlevels i32, minlayer i32, numlayers i32)
public extern mut glad_glTransformFeedbackBufferBase function(xfb i32, index i32, buffer i32)
public extern mut glad_glTransformFeedbackBufferRange function(xfb i32, index i32, buffer i32, offset isize, size isize)
public extern mut glad_glTransformFeedbackVaryings function(program i32, count i32, varyings **char, bufferMode i32)
public extern mut glad_glTranslated function(x f64, y f64, z f64)
public extern mut glad_glTranslatef function(x f32, y f32, z f32)
public extern mut glad_glUniform1d function(location i32, x f64)
public extern mut glad_glUniform1dv function(location i32, count i32, value *f64)
public extern mut glad_glUniform1f function(location i32, v0 f32)
public extern mut glad_glUniform1fv function(location i32, count i32, value *f32)
public extern mut glad_glUniform1i function(location i32, v0 i32)
public extern mut glad_glUniform1iv function(location i32, count i32, value *i32)
public extern mut glad_glUniform1ui function(location i32, v0 i32)
public extern mut glad_glUniform1uiv function(location i32, count i32, value *i32)
public extern mut glad_glUniform2d function(location i32, x f64, y f64)
public extern mut glad_glUniform2dv function(location i32, count i32, value *f64)
public extern mut glad_glUniform2f function(location i32, v0 f32, v1 f32)
public extern mut glad_glUniform2fv function(location i32, count i32, value *f32)
public extern mut glad_glUniform2i function(location i32, v0 i32, v1 i32)
public extern mut glad_glUniform2iv function(location i32, count i32, value *i32)
public extern mut glad_glUniform2ui function(location i32, v0 i32, v1 i32)
public extern mut glad_glUniform2uiv function(location i32, count i32, value *i32)
public extern mut glad_glUniform3d function(location i32, x f64, y f64, z f64)
public extern mut glad_glUniform3dv function(location i32, count i32, value *f64)
public extern mut glad_glUniform3f function(location i32, v0 f32, v1 f32, v2 f32)
public extern mut glad_glUniform3fv function(location i32, count i32, value *f32)
public extern mut glad_glUniform3i function(location i32, v0 i32, v1 i32, v2 i32)
public extern mut glad_glUniform3iv function(location i32, count i32, value *i32)
public extern mut glad_glUniform3ui function(location i32, v0 i32, v1 i32, v2 i32)
public extern mut glad_glUniform3uiv function(location i32, count i32, value *i32)
public extern mut glad_glUniform4d function(location i32, x f64, y f64, z f64, w f64)
public extern mut glad_glUniform4dv function(location i32, count i32, value *f64)
public extern mut glad_glUniform4f function(location i32, v0 f32, v1 f32, v2 f32, v3 f32)
public extern mut glad_glUniform4fv function(location i32, count i32, value *f32)
public extern mut glad_glUniform4i function(location i32, v0 i32, v1 i32, v2 i32, v3 i32)
public extern mut glad_glUniform4iv function(location i32, count i32, value *i32)
public extern mut glad_glUniform4ui function(location i32, v0 i32, v1 i32, v2 i32, v3 i32)
public extern mut glad_glUniform4uiv function(location i32, count i32, value *i32)
public extern mut glad_glUniformBlockBinding function(program i32, uniformBlockIndex i32, uniformBlockBinding i32)
public extern mut glad_glUniformMatrix2dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix2fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformMatrix2x3dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix2x3fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformMatrix2x4dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix2x4fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformMatrix3dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix3fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformMatrix3x2dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix3x2fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformMatrix3x4dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix3x4fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformMatrix4dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix4fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformMatrix4x2dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix4x2fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformMatrix4x3dv function(location i32, count i32, transpose bool, value *f64)
public extern mut glad_glUniformMatrix4x3fv function(location i32, count i32, transpose bool, value *f32)
public extern mut glad_glUniformSubroutinesuiv function(shadertype i32, count i32, indices *i32)
public extern mut glad_glUnmapBuffer function(target i32) -> bool
public extern mut glad_glUnmapNamedBuffer function(buffer i32) -> bool
public extern mut glad_glUseProgram function(program i32)
public extern mut glad_glUseProgramStages function(pipeline i32, stages i32, program i32)
public extern mut glad_glValidateProgram function(program i32)
public extern mut glad_glValidateProgramPipeline function(pipeline i32)
public extern mut glad_glVertex2d function(x f64, y f64)
public extern mut glad_glVertex2dv function(v *f64)
public extern mut glad_glVertex2f function(x f32, y f32)
public extern mut glad_glVertex2fv function(v *f32)
public extern mut glad_glVertex2i function(x i32, y i32)
public extern mut glad_glVertex2iv function(v *i32)
public extern mut glad_glVertex2s function(x i16, y i16)
public extern mut glad_glVertex2sv function(v *i16)
public extern mut glad_glVertex3d function(x f64, y f64, z f64)
public extern mut glad_glVertex3dv function(v *f64)
public extern mut glad_glVertex3f function(x f32, y f32, z f32)
public extern mut glad_glVertex3fv function(v *f32)
public extern mut glad_glVertex3i function(x i32, y i32, z i32)
public extern mut glad_glVertex3iv function(v *i32)
public extern mut glad_glVertex3s function(x i16, y i16, z i16)
public extern mut glad_glVertex3sv function(v *i16)
public extern mut glad_glVertex4d function(x f64, y f64, z f64, w f64)
public extern mut glad_glVertex4dv function(v *f64)
public extern mut glad_glVertex4f function(x f32, y f32, z f32, w f32)
public extern mut glad_glVertex4fv function(v *f32)
public extern mut glad_glVertex4i function(x i32, y i32, z i32, w i32)
public extern mut glad_glVertex4iv function(v *i32)
public extern mut glad_glVertex4s function(x i16, y i16, z i16, w i16)
public extern mut glad_glVertex4sv function(v *i16)
public extern mut glad_glVertexArrayAttribBinding function(vaobj i32, attribindex i32, bindingindex i32)
public extern mut glad_glVertexArrayAttribFormat function(vaobj i32, attribindex i32, size i32, type i32, normalized bool, relativeoffset i32)
public extern mut glad_glVertexArrayAttribIFormat function(vaobj i32, attribindex i32, size i32, type i32, relativeoffset i32)
public extern mut glad_glVertexArrayAttribLFormat function(vaobj i32, attribindex i32, size i32, type i32, relativeoffset i32)
public extern mut glad_glVertexArrayBindingDivisor function(vaobj i32, bindingindex i32, divisor i32)
public extern mut glad_glVertexArrayElementBuffer function(vaobj i32, buffer i32)
public extern mut glad_glVertexArrayVertexBuffer function(vaobj i32, bindingindex i32, buffer i32, offset isize, stride i32)
public extern mut glad_glVertexArrayVertexBuffers function(vaobj i32, first i32, count i32, buffers *i32, offsets *isize, strides *i32)
public extern mut glad_glVertexAttrib1d function(index i32, x f64)
public extern mut glad_glVertexAttrib1dv function(index i32, v *f64)
public extern mut glad_glVertexAttrib1f function(index i32, x f32)
public extern mut glad_glVertexAttrib1fv function(index i32, v *f32)
public extern mut glad_glVertexAttrib1s function(index i32, x i16)
public extern mut glad_glVertexAttrib1sv function(index i32, v *i16)
public extern mut glad_glVertexAttrib2d function(index i32, x f64, y f64)
public extern mut glad_glVertexAttrib2dv function(index i32, v *f64)
public extern mut glad_glVertexAttrib2f function(index i32, x f32, y f32)
public extern mut glad_glVertexAttrib2fv function(index i32, v *f32)
public extern mut glad_glVertexAttrib2s function(index i32, x i16, y i16)
public extern mut glad_glVertexAttrib2sv function(index i32, v *i16)
public extern mut glad_glVertexAttrib3d function(index i32, x f64, y f64, z f64)
public extern mut glad_glVertexAttrib3dv function(index i32, v *f64)
public extern mut glad_glVertexAttrib3f function(index i32, x f32, y f32, z f32)
public extern mut glad_glVertexAttrib3fv function(index i32, v *f32)
public extern mut glad_glVertexAttrib3s function(index i32, x i16, y i16, z i16)
public extern mut glad_glVertexAttrib3sv function(index i32, v *i16)
public extern mut glad_glVertexAttrib4Nbv function(index i32, v *i8)
public extern mut glad_glVertexAttrib4Niv function(index i32, v *i32)
public extern mut glad_glVertexAttrib4Nsv function(index i32, v *i16)
public extern mut glad_glVertexAttrib4Nub function(index i32, x i8, y i8, z i8, w i8)
public extern mut glad_glVertexAttrib4Nubv function(index i32, v *i8)
public extern mut glad_glVertexAttrib4Nuiv function(index i32, v *i32)
public extern mut glad_glVertexAttrib4Nusv function(index i32, v *i16)
public extern mut glad_glVertexAttrib4bv function(index i32, v *i8)
public extern mut glad_glVertexAttrib4d function(index i32, x f64, y f64, z f64, w f64)
public extern mut glad_glVertexAttrib4dv function(index i32, v *f64)
public extern mut glad_glVertexAttrib4f function(index i32, x f32, y f32, z f32, w f32)
public extern mut glad_glVertexAttrib4fv function(index i32, v *f32)
public extern mut glad_glVertexAttrib4iv function(index i32, v *i32)
public extern mut glad_glVertexAttrib4s function(index i32, x i16, y i16, z i16, w i16)
public extern mut glad_glVertexAttrib4sv function(index i32, v *i16)
public extern mut glad_glVertexAttrib4ubv function(index i32, v *i8)
public extern mut glad_glVertexAttrib4uiv function(index i32, v *i32)
public extern mut glad_glVertexAttrib4usv function(index i32, v *i16)
public extern mut glad_glVertexAttribBinding function(attribindex i32, bindingindex i32)
public extern mut glad_glVertexAttribDivisor function(index i32, divisor i32)
public extern mut glad_glVertexAttribFormat function(attribindex i32, size i32, type i32, normalized bool, relativeoffset i32)
public extern mut glad_glVertexAttribI1i function(index i32, x i32)
public extern mut glad_glVertexAttribI1iv function(index i32, v *i32)
public extern mut glad_glVertexAttribI1ui function(index i32, x i32)
public extern mut glad_glVertexAttribI1uiv function(index i32, v *i32)
public extern mut glad_glVertexAttribI2i function(index i32, x i32, y i32)
public extern mut glad_glVertexAttribI2iv function(index i32, v *i32)
public extern mut glad_glVertexAttribI2ui function(index i32, x i32, y i32)
public extern mut glad_glVertexAttribI2uiv function(index i32, v *i32)
public extern mut glad_glVertexAttribI3i function(index i32, x i32, y i32, z i32)
public extern mut glad_glVertexAttribI3iv function(index i32, v *i32)
public extern mut glad_glVertexAttribI3ui function(index i32, x i32, y i32, z i32)
public extern mut glad_glVertexAttribI3uiv function(index i32, v *i32)
public extern mut glad_glVertexAttribI4bv function(index i32, v *i8)
public extern mut glad_glVertexAttribI4i function(index i32, x i32, y i32, z i32, w i32)
public extern mut glad_glVertexAttribI4iv function(index i32, v *i32)
public extern mut glad_glVertexAttribI4sv function(index i32, v *i16)
public extern mut glad_glVertexAttribI4ubv function(index i32, v *i8)
public extern mut glad_glVertexAttribI4ui function(index i32, x i32, y i32, z i32, w i32)
public extern mut glad_glVertexAttribI4uiv function(index i32, v *i32)
public extern mut glad_glVertexAttribI4usv function(index i32, v *i16)
public extern mut glad_glVertexAttribIFormat function(attribindex i32, size i32, type i32, relativeoffset i32)
public extern mut glad_glVertexAttribIPointer function(index i32, size i32, type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glVertexAttribL1d function(index i32, x f64)
public extern mut glad_glVertexAttribL1dv function(index i32, v *f64)
public extern mut glad_glVertexAttribL2d function(index i32, x f64, y f64)
public extern mut glad_glVertexAttribL2dv function(index i32, v *f64)
public extern mut glad_glVertexAttribL3d function(index i32, x f64, y f64, z f64)
public extern mut glad_glVertexAttribL3dv function(index i32, v *f64)
public extern mut glad_glVertexAttribL4d function(index i32, x f64, y f64, z f64, w f64)
public extern mut glad_glVertexAttribL4dv function(index i32, v *f64)
public extern mut glad_glVertexAttribLFormat function(attribindex i32, size i32, type i32, relativeoffset i32)
public extern mut glad_glVertexAttribLPointer function(index i32, size i32, type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glVertexAttribP1ui function(index i32, type i32, normalized bool, value i32)
public extern mut glad_glVertexAttribP1uiv function(index i32, type i32, normalized bool, value *i32)
public extern mut glad_glVertexAttribP2ui function(index i32, type i32, normalized bool, value i32)
public extern mut glad_glVertexAttribP2uiv function(index i32, type i32, normalized bool, value *i32)
public extern mut glad_glVertexAttribP3ui function(index i32, type i32, normalized bool, value i32)
public extern mut glad_glVertexAttribP3uiv function(index i32, type i32, normalized bool, value *i32)
public extern mut glad_glVertexAttribP4ui function(index i32, type i32, normalized bool, value i32)
public extern mut glad_glVertexAttribP4uiv function(index i32, type i32, normalized bool, value *i32)
public extern mut glad_glVertexAttribPointer function(index i32, size i32, type i32, normalized bool, stride i32, pointer_ *mut byte)
public extern mut glad_glVertexBindingDivisor function(bindingindex i32, divisor i32)
public extern mut glad_glVertexP2ui function(type i32, value i32)
public extern mut glad_glVertexP2uiv function(type i32, value *i32)
public extern mut glad_glVertexP3ui function(type i32, value i32)
public extern mut glad_glVertexP3uiv function(type i32, value *i32)
public extern mut glad_glVertexP4ui function(type i32, value i32)
public extern mut glad_glVertexP4uiv function(type i32, value *i32)
public extern mut glad_glVertexPointer function(size i32, type i32, stride i32, pointer_ *mut byte)
public extern mut glad_glViewport function(x i32, y i32, width i32, height i32)
public extern mut glad_glViewportArrayv function(first i32, count i32, v *f32)
public extern mut glad_glViewportIndexedf function(index i32, x f32, y f32, w f32, h f32)
public extern mut glad_glViewportIndexedfv function(index i32, v *f32)
public extern mut glad_glWaitSync function(sync *mut byte, flags i32, timeout i64)
public extern mut glad_glWindowPos2d function(x f64, y f64)
public extern mut glad_glWindowPos2dv function(v *f64)
public extern mut glad_glWindowPos2f function(x f32, y f32)
public extern mut glad_glWindowPos2fv function(v *f32)
public extern mut glad_glWindowPos2i function(x i32, y i32)
public extern mut glad_glWindowPos2iv function(v *i32)
public extern mut glad_glWindowPos2s function(x i16, y i16)
public extern mut glad_glWindowPos2sv function(v *i16)
public extern mut glad_glWindowPos3d function(x f64, y f64, z f64)
public extern mut glad_glWindowPos3dv function(v *f64)
public extern mut glad_glWindowPos3f function(x f32, y f32, z f32)
public extern mut glad_glWindowPos3fv function(v *f32)
public extern mut glad_glWindowPos3i function(x i32, y i32, z i32)
public extern mut glad_glWindowPos3iv function(v *i32)
public extern mut glad_glWindowPos3s function(x i16, y i16, z i16)
public extern mut glad_glWindowPos3sv function(v *i16)

public const CURRENT_BIT = 0x00000001 as i32
public const POINT_BIT = 0x00000002 as i32
public const LINE_BIT = 0x00000004 as i32
public const POLYGON_BIT = 0x00000008 as i32
public const POLYGON_STIPPLE_BIT = 0x00000010 as i32
public const PIXEL_MODE_BIT = 0x00000020 as i32
public const LIGHTING_BIT = 0x00000040 as i32
public const FOG_BIT = 0x00000080 as i32
public const DEPTH_BUFFER_BIT = 0x00000100 as i32
public const ACCUM_BUFFER_BIT = 0x00000200 as i32
public const STENCIL_BUFFER_BIT = 0x00000400 as i32
public const VIEWPORT_BIT = 0x00000800 as i32
public const TRANSFORM_BIT = 0x00001000 as i32
public const ENABLE_BIT = 0x00002000 as i32
public const COLOR_BUFFER_BIT = 0x00004000 as i32
public const HINT_BIT = 0x00008000 as i32
public const EVAL_BIT = 0x00010000 as i32
public const LIST_BIT = 0x00020000 as i32
public const TEXTURE_BIT = 0x00040000 as i32
public const SCISSOR_BIT = 0x00080000 as i32
public const MULTISAMPLE_BIT = 0x20000000 as i32
public const ALL_ATTRIB_BITS = 0xFFFFFFFF as i32
public const DYNAMIC_STORAGE_BIT = 0x0100 as i32
public const CLIENT_STORAGE_BIT = 0x0200 as i32
public const CLIENT_PIXEL_STORE_BIT = 0x00000001 as i32
public const CLIENT_VERTEX_ARRAY_BIT = 0x00000002 as i32
public const CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF as i32
public const CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001 as i32
public const CONTEXT_FLAG_DEBUG_BIT = 0x00000002 as i32
public const CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x00000004 as i32
public const CONTEXT_FLAG_NO_ERROR_BIT = 0x00000008 as i32
public const CONTEXT_CORE_PROFILE_BIT = 0x00000001 as i32
public const CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002 as i32
public const MAP_READ_BIT = 0x0001 as i32
public const MAP_WRITE_BIT = 0x0002 as i32
public const MAP_INVALIDATE_RANGE_BIT = 0x0004 as i32
public const MAP_INVALIDATE_BUFFER_BIT = 0x0008 as i32
public const MAP_FLUSH_EXPLICIT_BIT = 0x0010 as i32
public const MAP_UNSYNCHRONIZED_BIT = 0x0020 as i32
public const MAP_PERSISTENT_BIT = 0x0040 as i32
public const MAP_COHERENT_BIT = 0x0080 as i32
public const VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001 as i32
public const ELEMENT_ARRAY_BARRIER_BIT = 0x00000002 as i32
public const UNIFORM_BARRIER_BIT = 0x00000004 as i32
public const TEXTURE_FETCH_BARRIER_BIT = 0x00000008 as i32
public const SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020 as i32
public const COMMAND_BARRIER_BIT = 0x00000040 as i32
public const PIXEL_BUFFER_BARRIER_BIT = 0x00000080 as i32
public const TEXTURE_UPDATE_BARRIER_BIT = 0x00000100 as i32
public const BUFFER_UPDATE_BARRIER_BIT = 0x00000200 as i32
public const FRAMEBUFFER_BARRIER_BIT = 0x00000400 as i32
public const TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800 as i32
public const ATOMIC_COUNTER_BARRIER_BIT = 0x00001000 as i32
public const SHADER_STORAGE_BARRIER_BIT = 0x00002000 as i32
public const CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000 as i32
public const QUERY_BUFFER_BARRIER_BIT = 0x00008000 as i32
public const ALL_BARRIER_BITS = 0xFFFFFFFF as i32
public const SYNC_FLUSH_COMMANDS_BIT = 0x00000001 as i32
public const VERTEX_SHADER_BIT = 0x00000001 as i32
public const FRAGMENT_SHADER_BIT = 0x00000002 as i32
public const GEOMETRY_SHADER_BIT = 0x00000004 as i32
public const TESS_CONTROL_SHADER_BIT = 0x00000008 as i32
public const TESS_EVALUATION_SHADER_BIT = 0x00000010 as i32
public const COMPUTE_SHADER_BIT = 0x00000020 as i32
public const ALL_SHADER_BITS = 0xFFFFFFFF as i32
public const FALSE = 0 as i32
public const NO_ERROR = 0 as i32
public const ZERO = 0 as i32
public const NONE = 0 as i32
public const TRUE = 1 as i32
public const ONE = 1 as i32
public const INVALID_INDEX = 0xFFFFFFFF as i32
public const TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF as i32
public const POINTS = 0x0000 as i32
public const LINES = 0x0001 as i32
public const LINE_LOOP = 0x0002 as i32
public const LINE_STRIP = 0x0003 as i32
public const TRIANGLES = 0x0004 as i32
public const TRIANGLE_STRIP = 0x0005 as i32
public const TRIANGLE_FAN = 0x0006 as i32
public const QUADS = 0x0007 as i32
public const QUAD_STRIP = 0x0008 as i32
public const POLYGON = 0x0009 as i32
public const LINES_ADJACENCY = 0x000A as i32
public const LINE_STRIP_ADJACENCY = 0x000B as i32
public const TRIANGLES_ADJACENCY = 0x000C as i32
public const TRIANGLE_STRIP_ADJACENCY = 0x000D as i32
public const PATCHES = 0x000E as i32
public const ACCUM = 0x0100 as i32
public const LOAD = 0x0101 as i32
public const RETURN = 0x0102 as i32
public const MULT = 0x0103 as i32
public const ADD = 0x0104 as i32
public const NEVER = 0x0200 as i32
public const LESS = 0x0201 as i32
public const EQUAL = 0x0202 as i32
public const LEQUAL = 0x0203 as i32
public const GREATER = 0x0204 as i32
public const NOTEQUAL = 0x0205 as i32
public const GEQUAL = 0x0206 as i32
public const ALWAYS = 0x0207 as i32
public const SRC_COLOR = 0x0300 as i32
public const ONE_MINUS_SRC_COLOR = 0x0301 as i32
public const SRC_ALPHA = 0x0302 as i32
public const ONE_MINUS_SRC_ALPHA = 0x0303 as i32
public const DST_ALPHA = 0x0304 as i32
public const ONE_MINUS_DST_ALPHA = 0x0305 as i32
public const DST_COLOR = 0x0306 as i32
public const ONE_MINUS_DST_COLOR = 0x0307 as i32
public const SRC_ALPHA_SATURATE = 0x0308 as i32
public const FRONT_LEFT = 0x0400 as i32
public const FRONT_RIGHT = 0x0401 as i32
public const BACK_LEFT = 0x0402 as i32
public const BACK_RIGHT = 0x0403 as i32
public const FRONT = 0x0404 as i32
public const BACK = 0x0405 as i32
public const LEFT = 0x0406 as i32
public const RIGHT = 0x0407 as i32
public const FRONT_AND_BACK = 0x0408 as i32
public const AUX0 = 0x0409 as i32
public const AUX1 = 0x040A as i32
public const AUX2 = 0x040B as i32
public const AUX3 = 0x040C as i32
public const INVALID_ENUM = 0x0500 as i32
public const INVALID_VALUE = 0x0501 as i32
public const INVALID_OPERATION = 0x0502 as i32
public const STACK_OVERFLOW = 0x0503 as i32
public const STACK_UNDERFLOW = 0x0504 as i32
public const OUT_OF_MEMORY = 0x0505 as i32
public const INVALID_FRAMEBUFFER_OPERATION = 0x0506 as i32
public const CONTEXT_LOST = 0x0507 as i32
public const _2D = 0x0600 as i32
public const _3D = 0x0601 as i32
public const _3D_COLOR = 0x0602 as i32
public const _3D_COLOR_TEXTURE = 0x0603 as i32
public const _4D_COLOR_TEXTURE = 0x0604 as i32
public const PASS_THROUGH_TOKEN = 0x0700 as i32
public const POINT_TOKEN = 0x0701 as i32
public const LINE_TOKEN = 0x0702 as i32
public const POLYGON_TOKEN = 0x0703 as i32
public const BITMAP_TOKEN = 0x0704 as i32
public const DRAW_PIXEL_TOKEN = 0x0705 as i32
public const COPY_PIXEL_TOKEN = 0x0706 as i32
public const LINE_RESET_TOKEN = 0x0707 as i32
public const EXP = 0x0800 as i32
public const EXP2 = 0x0801 as i32
public const CW = 0x0900 as i32
public const CCW = 0x0901 as i32
public const COEFF = 0x0A00 as i32
public const ORDER = 0x0A01 as i32
public const DOMAIN = 0x0A02 as i32
public const CURRENT_COLOR = 0x0B00 as i32
public const CURRENT_INDEX = 0x0B01 as i32
public const CURRENT_NORMAL = 0x0B02 as i32
public const CURRENT_TEXTURE_COORDS = 0x0B03 as i32
public const CURRENT_RASTER_COLOR = 0x0B04 as i32
public const CURRENT_RASTER_INDEX = 0x0B05 as i32
public const CURRENT_RASTER_TEXTURE_COORDS = 0x0B06 as i32
public const CURRENT_RASTER_POSITION = 0x0B07 as i32
public const CURRENT_RASTER_POSITION_VALID = 0x0B08 as i32
public const CURRENT_RASTER_DISTANCE = 0x0B09 as i32
public const POINT_SMOOTH = 0x0B10 as i32
public const POINT_SIZE = 0x0B11 as i32
public const POINT_SIZE_RANGE = 0x0B12 as i32
public const SMOOTH_POINT_SIZE_RANGE = 0x0B12 as i32
public const POINT_SIZE_GRANULARITY = 0x0B13 as i32
public const SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13 as i32
public const LINE_SMOOTH = 0x0B20 as i32
public const LINE_WIDTH = 0x0B21 as i32
public const LINE_WIDTH_RANGE = 0x0B22 as i32
public const SMOOTH_LINE_WIDTH_RANGE = 0x0B22 as i32
public const LINE_WIDTH_GRANULARITY = 0x0B23 as i32
public const SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23 as i32
public const LINE_STIPPLE = 0x0B24 as i32
public const LINE_STIPPLE_PATTERN = 0x0B25 as i32
public const LINE_STIPPLE_REPEAT = 0x0B26 as i32
public const LIST_MODE = 0x0B30 as i32
public const MAX_LIST_NESTING = 0x0B31 as i32
public const LIST_BASE = 0x0B32 as i32
public const LIST_INDEX = 0x0B33 as i32
public const POLYGON_MODE = 0x0B40 as i32
public const POLYGON_SMOOTH = 0x0B41 as i32
public const POLYGON_STIPPLE = 0x0B42 as i32
public const EDGE_FLAG = 0x0B43 as i32
public const CULL_FACE = 0x0B44 as i32
public const CULL_FACE_MODE = 0x0B45 as i32
public const FRONT_FACE = 0x0B46 as i32
public const LIGHTING = 0x0B50 as i32
public const LIGHT_MODEL_LOCAL_VIEWER = 0x0B51 as i32
public const LIGHT_MODEL_TWO_SIDE = 0x0B52 as i32
public const LIGHT_MODEL_AMBIENT = 0x0B53 as i32
public const SHADE_MODEL = 0x0B54 as i32
public const COLOR_MATERIAL_FACE = 0x0B55 as i32
public const COLOR_MATERIAL_PARAMETER = 0x0B56 as i32
public const COLOR_MATERIAL = 0x0B57 as i32
public const FOG = 0x0B60 as i32
public const FOG_INDEX = 0x0B61 as i32
public const FOG_DENSITY = 0x0B62 as i32
public const FOG_START = 0x0B63 as i32
public const FOG_END = 0x0B64 as i32
public const FOG_MODE = 0x0B65 as i32
public const FOG_COLOR = 0x0B66 as i32
public const DEPTH_RANGE = 0x0B70 as i32
public const DEPTH_TEST = 0x0B71 as i32
public const DEPTH_WRITEMASK = 0x0B72 as i32
public const DEPTH_CLEAR_VALUE = 0x0B73 as i32
public const DEPTH_FUNC = 0x0B74 as i32
public const ACCUM_CLEAR_VALUE = 0x0B80 as i32
public const STENCIL_TEST = 0x0B90 as i32
public const STENCIL_CLEAR_VALUE = 0x0B91 as i32
public const STENCIL_FUNC = 0x0B92 as i32
public const STENCIL_VALUE_MASK = 0x0B93 as i32
public const STENCIL_FAIL = 0x0B94 as i32
public const STENCIL_PASS_DEPTH_FAIL = 0x0B95 as i32
public const STENCIL_PASS_DEPTH_PASS = 0x0B96 as i32
public const STENCIL_REF = 0x0B97 as i32
public const STENCIL_WRITEMASK = 0x0B98 as i32
public const MATRIX_MODE = 0x0BA0 as i32
public const NORMALIZE = 0x0BA1 as i32
public const VIEWPORT = 0x0BA2 as i32
public const MODELVIEW_STACK_DEPTH = 0x0BA3 as i32
public const PROJECTION_STACK_DEPTH = 0x0BA4 as i32
public const TEXTURE_STACK_DEPTH = 0x0BA5 as i32
public const MODELVIEW_MATRIX = 0x0BA6 as i32
public const PROJECTION_MATRIX = 0x0BA7 as i32
public const TEXTURE_MATRIX = 0x0BA8 as i32
public const ATTRIB_STACK_DEPTH = 0x0BB0 as i32
public const CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1 as i32
public const ALPHA_TEST = 0x0BC0 as i32
public const ALPHA_TEST_FUNC = 0x0BC1 as i32
public const ALPHA_TEST_REF = 0x0BC2 as i32
public const DITHER = 0x0BD0 as i32
public const BLEND_DST = 0x0BE0 as i32
public const BLEND_SRC = 0x0BE1 as i32
public const BLEND = 0x0BE2 as i32
public const LOGIC_OP_MODE = 0x0BF0 as i32
public const INDEX_LOGIC_OP = 0x0BF1 as i32
public const LOGIC_OP = 0x0BF1 as i32
public const COLOR_LOGIC_OP = 0x0BF2 as i32
public const AUX_BUFFERS = 0x0C00 as i32
public const DRAW_BUFFER = 0x0C01 as i32
public const READ_BUFFER = 0x0C02 as i32
public const SCISSOR_BOX = 0x0C10 as i32
public const SCISSOR_TEST = 0x0C11 as i32
public const INDEX_CLEAR_VALUE = 0x0C20 as i32
public const INDEX_WRITEMASK = 0x0C21 as i32
public const COLOR_CLEAR_VALUE = 0x0C22 as i32
public const COLOR_WRITEMASK = 0x0C23 as i32
public const INDEX_MODE = 0x0C30 as i32
public const RGBA_MODE = 0x0C31 as i32
public const DOUBLEBUFFER = 0x0C32 as i32
public const STEREO = 0x0C33 as i32
public const RENDER_MODE = 0x0C40 as i32
public const PERSPECTIVE_CORRECTION_HINT = 0x0C50 as i32
public const POINT_SMOOTH_HINT = 0x0C51 as i32
public const LINE_SMOOTH_HINT = 0x0C52 as i32
public const POLYGON_SMOOTH_HINT = 0x0C53 as i32
public const FOG_HINT = 0x0C54 as i32
public const TEXTURE_GEN_S = 0x0C60 as i32
public const TEXTURE_GEN_T = 0x0C61 as i32
public const TEXTURE_GEN_R = 0x0C62 as i32
public const TEXTURE_GEN_Q = 0x0C63 as i32
public const PIXEL_MAP_I_TO_I = 0x0C70 as i32
public const PIXEL_MAP_S_TO_S = 0x0C71 as i32
public const PIXEL_MAP_I_TO_R = 0x0C72 as i32
public const PIXEL_MAP_I_TO_G = 0x0C73 as i32
public const PIXEL_MAP_I_TO_B = 0x0C74 as i32
public const PIXEL_MAP_I_TO_A = 0x0C75 as i32
public const PIXEL_MAP_R_TO_R = 0x0C76 as i32
public const PIXEL_MAP_G_TO_G = 0x0C77 as i32
public const PIXEL_MAP_B_TO_B = 0x0C78 as i32
public const PIXEL_MAP_A_TO_A = 0x0C79 as i32
public const PIXEL_MAP_I_TO_I_SIZE = 0x0CB0 as i32
public const PIXEL_MAP_S_TO_S_SIZE = 0x0CB1 as i32
public const PIXEL_MAP_I_TO_R_SIZE = 0x0CB2 as i32
public const PIXEL_MAP_I_TO_G_SIZE = 0x0CB3 as i32
public const PIXEL_MAP_I_TO_B_SIZE = 0x0CB4 as i32
public const PIXEL_MAP_I_TO_A_SIZE = 0x0CB5 as i32
public const PIXEL_MAP_R_TO_R_SIZE = 0x0CB6 as i32
public const PIXEL_MAP_G_TO_G_SIZE = 0x0CB7 as i32
public const PIXEL_MAP_B_TO_B_SIZE = 0x0CB8 as i32
public const PIXEL_MAP_A_TO_A_SIZE = 0x0CB9 as i32
public const UNPACK_SWAP_BYTES = 0x0CF0 as i32
public const UNPACK_LSB_FIRST = 0x0CF1 as i32
public const UNPACK_ROW_LENGTH = 0x0CF2 as i32
public const UNPACK_SKIP_ROWS = 0x0CF3 as i32
public const UNPACK_SKIP_PIXELS = 0x0CF4 as i32
public const UNPACK_ALIGNMENT = 0x0CF5 as i32
public const PACK_SWAP_BYTES = 0x0D00 as i32
public const PACK_LSB_FIRST = 0x0D01 as i32
public const PACK_ROW_LENGTH = 0x0D02 as i32
public const PACK_SKIP_ROWS = 0x0D03 as i32
public const PACK_SKIP_PIXELS = 0x0D04 as i32
public const PACK_ALIGNMENT = 0x0D05 as i32
public const MAP_COLOR = 0x0D10 as i32
public const MAP_STENCIL = 0x0D11 as i32
public const INDEX_SHIFT = 0x0D12 as i32
public const INDEX_OFFSET = 0x0D13 as i32
public const RED_SCALE = 0x0D14 as i32
public const RED_BIAS = 0x0D15 as i32
public const ZOOM_X = 0x0D16 as i32
public const ZOOM_Y = 0x0D17 as i32
public const GREEN_SCALE = 0x0D18 as i32
public const GREEN_BIAS = 0x0D19 as i32
public const BLUE_SCALE = 0x0D1A as i32
public const BLUE_BIAS = 0x0D1B as i32
public const ALPHA_SCALE = 0x0D1C as i32
public const ALPHA_BIAS = 0x0D1D as i32
public const DEPTH_SCALE = 0x0D1E as i32
public const DEPTH_BIAS = 0x0D1F as i32
public const MAX_EVAL_ORDER = 0x0D30 as i32
public const MAX_LIGHTS = 0x0D31 as i32
public const MAX_CLIP_PLANES = 0x0D32 as i32
public const MAX_CLIP_DISTANCES = 0x0D32 as i32
public const MAX_TEXTURE_SIZE = 0x0D33 as i32
public const MAX_PIXEL_MAP_TABLE = 0x0D34 as i32
public const MAX_ATTRIB_STACK_DEPTH = 0x0D35 as i32
public const MAX_MODELVIEW_STACK_DEPTH = 0x0D36 as i32
public const MAX_NAME_STACK_DEPTH = 0x0D37 as i32
public const MAX_PROJECTION_STACK_DEPTH = 0x0D38 as i32
public const MAX_TEXTURE_STACK_DEPTH = 0x0D39 as i32
public const MAX_VIEWPORT_DIMS = 0x0D3A as i32
public const MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B as i32
public const SUBPIXEL_BITS = 0x0D50 as i32
public const INDEX_BITS = 0x0D51 as i32
public const RED_BITS = 0x0D52 as i32
public const GREEN_BITS = 0x0D53 as i32
public const BLUE_BITS = 0x0D54 as i32
public const ALPHA_BITS = 0x0D55 as i32
public const DEPTH_BITS = 0x0D56 as i32
public const STENCIL_BITS = 0x0D57 as i32
public const ACCUM_RED_BITS = 0x0D58 as i32
public const ACCUM_GREEN_BITS = 0x0D59 as i32
public const ACCUM_BLUE_BITS = 0x0D5A as i32
public const ACCUM_ALPHA_BITS = 0x0D5B as i32
public const NAME_STACK_DEPTH = 0x0D70 as i32
public const AUTO_NORMAL = 0x0D80 as i32
public const MAP1_COLOR_4 = 0x0D90 as i32
public const MAP1_INDEX = 0x0D91 as i32
public const MAP1_NORMAL = 0x0D92 as i32
public const MAP1_TEXTURE_COORD_1 = 0x0D93 as i32
public const MAP1_TEXTURE_COORD_2 = 0x0D94 as i32
public const MAP1_TEXTURE_COORD_3 = 0x0D95 as i32
public const MAP1_TEXTURE_COORD_4 = 0x0D96 as i32
public const MAP1_VERTEX_3 = 0x0D97 as i32
public const MAP1_VERTEX_4 = 0x0D98 as i32
public const MAP2_COLOR_4 = 0x0DB0 as i32
public const MAP2_INDEX = 0x0DB1 as i32
public const MAP2_NORMAL = 0x0DB2 as i32
public const MAP2_TEXTURE_COORD_1 = 0x0DB3 as i32
public const MAP2_TEXTURE_COORD_2 = 0x0DB4 as i32
public const MAP2_TEXTURE_COORD_3 = 0x0DB5 as i32
public const MAP2_TEXTURE_COORD_4 = 0x0DB6 as i32
public const MAP2_VERTEX_3 = 0x0DB7 as i32
public const MAP2_VERTEX_4 = 0x0DB8 as i32
public const MAP1_GRID_DOMAIN = 0x0DD0 as i32
public const MAP1_GRID_SEGMENTS = 0x0DD1 as i32
public const MAP2_GRID_DOMAIN = 0x0DD2 as i32
public const MAP2_GRID_SEGMENTS = 0x0DD3 as i32
public const TEXTURE_1D = 0x0DE0 as i32
public const TEXTURE_2D = 0x0DE1 as i32
public const FEEDBACK_BUFFER_POINTER = 0x0DF0 as i32
public const FEEDBACK_BUFFER_SIZE = 0x0DF1 as i32
public const FEEDBACK_BUFFER_TYPE = 0x0DF2 as i32
public const SELECTION_BUFFER_POINTER = 0x0DF3 as i32
public const SELECTION_BUFFER_SIZE = 0x0DF4 as i32
public const TEXTURE_WIDTH = 0x1000 as i32
public const TEXTURE_HEIGHT = 0x1001 as i32
public const TEXTURE_INTERNAL_FORMAT = 0x1003 as i32
public const TEXTURE_COMPONENTS = 0x1003 as i32
public const TEXTURE_BORDER_COLOR = 0x1004 as i32
public const TEXTURE_BORDER = 0x1005 as i32
public const TEXTURE_TARGET = 0x1006 as i32
public const DONT_CARE = 0x1100 as i32
public const FASTEST = 0x1101 as i32
public const NICEST = 0x1102 as i32
public const AMBIENT = 0x1200 as i32
public const DIFFUSE = 0x1201 as i32
public const SPECULAR = 0x1202 as i32
public const POSITION = 0x1203 as i32
public const SPOT_DIRECTION = 0x1204 as i32
public const SPOT_EXPONENT = 0x1205 as i32
public const SPOT_CUTOFF = 0x1206 as i32
public const CONSTANT_ATTENUATION = 0x1207 as i32
public const LINEAR_ATTENUATION = 0x1208 as i32
public const QUADRATIC_ATTENUATION = 0x1209 as i32
public const COMPILE = 0x1300 as i32
public const COMPILE_AND_EXECUTE = 0x1301 as i32
public const BYTE = 0x1400 as i32
public const UNSIGNED_BYTE = 0x1401 as i32
public const SHORT = 0x1402 as i32
public const UNSIGNED_SHORT = 0x1403 as i32
public const INT = 0x1404 as i32
public const UNSIGNED_INT = 0x1405 as i32
public const FLOAT = 0x1406 as i32
public const _2_BYTES = 0x1407 as i32
public const _3_BYTES = 0x1408 as i32
public const _4_BYTES = 0x1409 as i32
public const DOUBLE = 0x140A as i32
public const HALF_FLOAT = 0x140B as i32
public const FIXED = 0x140C as i32
public const CLEAR = 0x1500 as i32
public const AND = 0x1501 as i32
public const AND_REVERSE = 0x1502 as i32
public const COPY = 0x1503 as i32
public const AND_INVERTED = 0x1504 as i32
public const NOOP = 0x1505 as i32
public const XOR = 0x1506 as i32
public const OR = 0x1507 as i32
public const NOR = 0x1508 as i32
public const EQUIV = 0x1509 as i32
public const INVERT = 0x150A as i32
public const OR_REVERSE = 0x150B as i32
public const COPY_INVERTED = 0x150C as i32
public const OR_INVERTED = 0x150D as i32
public const NAND = 0x150E as i32
public const SET = 0x150F as i32
public const EMISSION = 0x1600 as i32
public const SHININESS = 0x1601 as i32
public const AMBIENT_AND_DIFFUSE = 0x1602 as i32
public const COLOR_INDEXES = 0x1603 as i32
public const MODELVIEW = 0x1700 as i32
public const PROJECTION = 0x1701 as i32
public const TEXTURE = 0x1702 as i32
public const COLOR = 0x1800 as i32
public const DEPTH = 0x1801 as i32
public const STENCIL = 0x1802 as i32
public const COLOR_INDEX = 0x1900 as i32
public const STENCIL_INDEX = 0x1901 as i32
public const DEPTH_COMPONENT = 0x1902 as i32
public const RED = 0x1903 as i32
public const GREEN = 0x1904 as i32
public const BLUE = 0x1905 as i32
public const ALPHA = 0x1906 as i32
public const RGB = 0x1907 as i32
public const RGBA = 0x1908 as i32
public const LUMINANCE = 0x1909 as i32
public const LUMINANCE_ALPHA = 0x190A as i32
public const BITMAP = 0x1A00 as i32
public const POINT = 0x1B00 as i32
public const LINE = 0x1B01 as i32
public const FILL = 0x1B02 as i32
public const RENDER = 0x1C00 as i32
public const FEEDBACK = 0x1C01 as i32
public const SELECT = 0x1C02 as i32
public const FLAT = 0x1D00 as i32
public const SMOOTH = 0x1D01 as i32
public const KEEP = 0x1E00 as i32
public const REPLACE = 0x1E01 as i32
public const INCR = 0x1E02 as i32
public const DECR = 0x1E03 as i32
public const VENDOR = 0x1F00 as i32
public const RENDERER = 0x1F01 as i32
public const VERSION = 0x1F02 as i32
public const EXTENSIONS = 0x1F03 as i32
public const S = 0x2000 as i32
public const T = 0x2001 as i32
public const R = 0x2002 as i32
public const Q = 0x2003 as i32
public const MODULATE = 0x2100 as i32
public const DECAL = 0x2101 as i32
public const TEXTURE_ENV_MODE = 0x2200 as i32
public const TEXTURE_ENV_COLOR = 0x2201 as i32
public const TEXTURE_ENV = 0x2300 as i32
public const EYE_LINEAR = 0x2400 as i32
public const OBJECT_LINEAR = 0x2401 as i32
public const SPHERE_MAP = 0x2402 as i32
public const TEXTURE_GEN_MODE = 0x2500 as i32
public const OBJECT_PLANE = 0x2501 as i32
public const EYE_PLANE = 0x2502 as i32
public const NEAREST = 0x2600 as i32
public const LINEAR = 0x2601 as i32
public const NEAREST_MIPMAP_NEAREST = 0x2700 as i32
public const LINEAR_MIPMAP_NEAREST = 0x2701 as i32
public const NEAREST_MIPMAP_LINEAR = 0x2702 as i32
public const LINEAR_MIPMAP_LINEAR = 0x2703 as i32
public const TEXTURE_MAG_FILTER = 0x2800 as i32
public const TEXTURE_MIN_FILTER = 0x2801 as i32
public const TEXTURE_WRAP_S = 0x2802 as i32
public const TEXTURE_WRAP_T = 0x2803 as i32
public const CLAMP = 0x2900 as i32
public const REPEAT = 0x2901 as i32
public const POLYGON_OFFSET_UNITS = 0x2A00 as i32
public const POLYGON_OFFSET_POINT = 0x2A01 as i32
public const POLYGON_OFFSET_LINE = 0x2A02 as i32
public const R3_G3_B2 = 0x2A10 as i32
public const V2F = 0x2A20 as i32
public const V3F = 0x2A21 as i32
public const C4UB_V2F = 0x2A22 as i32
public const C4UB_V3F = 0x2A23 as i32
public const C3F_V3F = 0x2A24 as i32
public const N3F_V3F = 0x2A25 as i32
public const C4F_N3F_V3F = 0x2A26 as i32
public const T2F_V3F = 0x2A27 as i32
public const T4F_V4F = 0x2A28 as i32
public const T2F_C4UB_V3F = 0x2A29 as i32
public const T2F_C3F_V3F = 0x2A2A as i32
public const T2F_N3F_V3F = 0x2A2B as i32
public const T2F_C4F_N3F_V3F = 0x2A2C as i32
public const T4F_C4F_N3F_V4F = 0x2A2D as i32
public const CLIP_PLANE0 = 0x3000 as i32
public const CLIP_DISTANCE0 = 0x3000 as i32
public const CLIP_PLANE1 = 0x3001 as i32
public const CLIP_DISTANCE1 = 0x3001 as i32
public const CLIP_PLANE2 = 0x3002 as i32
public const CLIP_DISTANCE2 = 0x3002 as i32
public const CLIP_PLANE3 = 0x3003 as i32
public const CLIP_DISTANCE3 = 0x3003 as i32
public const CLIP_PLANE4 = 0x3004 as i32
public const CLIP_DISTANCE4 = 0x3004 as i32
public const CLIP_PLANE5 = 0x3005 as i32
public const CLIP_DISTANCE5 = 0x3005 as i32
public const CLIP_DISTANCE6 = 0x3006 as i32
public const CLIP_DISTANCE7 = 0x3007 as i32
public const LIGHT0 = 0x4000 as i32
public const LIGHT1 = 0x4001 as i32
public const LIGHT2 = 0x4002 as i32
public const LIGHT3 = 0x4003 as i32
public const LIGHT4 = 0x4004 as i32
public const LIGHT5 = 0x4005 as i32
public const LIGHT6 = 0x4006 as i32
public const LIGHT7 = 0x4007 as i32
public const CONSTANT_COLOR = 0x8001 as i32
public const ONE_MINUS_CONSTANT_COLOR = 0x8002 as i32
public const CONSTANT_ALPHA = 0x8003 as i32
public const ONE_MINUS_CONSTANT_ALPHA = 0x8004 as i32
public const BLEND_COLOR = 0x8005 as i32
public const FUNC_ADD = 0x8006 as i32
public const MIN = 0x8007 as i32
public const MAX = 0x8008 as i32
public const BLEND_EQUATION = 0x8009 as i32
public const BLEND_EQUATION_RGB = 0x8009 as i32
public const FUNC_SUBTRACT = 0x800A as i32
public const FUNC_REVERSE_SUBTRACT = 0x800B as i32
public const CONVOLUTION_1D = 0x8010 as i32
public const CONVOLUTION_2D = 0x8011 as i32
public const SEPARABLE_2D = 0x8012 as i32
public const HISTOGRAM = 0x8024 as i32
public const PROXY_HISTOGRAM = 0x8025 as i32
public const MINMAX = 0x802E as i32
public const UNSIGNED_BYTE_3_3_2 = 0x8032 as i32
public const UNSIGNED_SHORT_4_4_4_4 = 0x8033 as i32
public const UNSIGNED_SHORT_5_5_5_1 = 0x8034 as i32
public const UNSIGNED_INT_8_8_8_8 = 0x8035 as i32
public const UNSIGNED_INT_10_10_10_2 = 0x8036 as i32
public const POLYGON_OFFSET_FILL = 0x8037 as i32
public const POLYGON_OFFSET_FACTOR = 0x8038 as i32
public const RESCALE_NORMAL = 0x803A as i32
public const ALPHA4 = 0x803B as i32
public const ALPHA8 = 0x803C as i32
public const ALPHA12 = 0x803D as i32
public const ALPHA16 = 0x803E as i32
public const LUMINANCE4 = 0x803F as i32
public const LUMINANCE8 = 0x8040 as i32
public const LUMINANCE12 = 0x8041 as i32
public const LUMINANCE16 = 0x8042 as i32
public const LUMINANCE4_ALPHA4 = 0x8043 as i32
public const LUMINANCE6_ALPHA2 = 0x8044 as i32
public const LUMINANCE8_ALPHA8 = 0x8045 as i32
public const LUMINANCE12_ALPHA4 = 0x8046 as i32
public const LUMINANCE12_ALPHA12 = 0x8047 as i32
public const LUMINANCE16_ALPHA16 = 0x8048 as i32
public const INTENSITY = 0x8049 as i32
public const INTENSITY4 = 0x804A as i32
public const INTENSITY8 = 0x804B as i32
public const INTENSITY12 = 0x804C as i32
public const INTENSITY16 = 0x804D as i32
public const RGB4 = 0x804F as i32
public const RGB5 = 0x8050 as i32
public const RGB8 = 0x8051 as i32
public const RGB10 = 0x8052 as i32
public const RGB12 = 0x8053 as i32
public const RGB16 = 0x8054 as i32
public const RGBA2 = 0x8055 as i32
public const RGBA4 = 0x8056 as i32
public const RGB5_A1 = 0x8057 as i32
public const RGBA8 = 0x8058 as i32
public const RGB10_A2 = 0x8059 as i32
public const RGBA12 = 0x805A as i32
public const RGBA16 = 0x805B as i32
public const TEXTURE_RED_SIZE = 0x805C as i32
public const TEXTURE_GREEN_SIZE = 0x805D as i32
public const TEXTURE_BLUE_SIZE = 0x805E as i32
public const TEXTURE_ALPHA_SIZE = 0x805F as i32
public const TEXTURE_LUMINANCE_SIZE = 0x8060 as i32
public const TEXTURE_INTENSITY_SIZE = 0x8061 as i32
public const PROXY_TEXTURE_1D = 0x8063 as i32
public const PROXY_TEXTURE_2D = 0x8064 as i32
public const TEXTURE_PRIORITY = 0x8066 as i32
public const TEXTURE_RESIDENT = 0x8067 as i32
public const TEXTURE_BINDING_1D = 0x8068 as i32
public const TEXTURE_BINDING_2D = 0x8069 as i32
public const TEXTURE_BINDING_3D = 0x806A as i32
public const PACK_SKIP_IMAGES = 0x806B as i32
public const PACK_IMAGE_HEIGHT = 0x806C as i32
public const UNPACK_SKIP_IMAGES = 0x806D as i32
public const UNPACK_IMAGE_HEIGHT = 0x806E as i32
public const TEXTURE_3D = 0x806F as i32
public const PROXY_TEXTURE_3D = 0x8070 as i32
public const TEXTURE_DEPTH = 0x8071 as i32
public const TEXTURE_WRAP_R = 0x8072 as i32
public const MAX_3D_TEXTURE_SIZE = 0x8073 as i32
public const VERTEX_ARRAY = 0x8074 as i32
public const NORMAL_ARRAY = 0x8075 as i32
public const COLOR_ARRAY = 0x8076 as i32
public const INDEX_ARRAY = 0x8077 as i32
public const TEXTURE_COORD_ARRAY = 0x8078 as i32
public const EDGE_FLAG_ARRAY = 0x8079 as i32
public const VERTEX_ARRAY_SIZE = 0x807A as i32
public const VERTEX_ARRAY_TYPE = 0x807B as i32
public const VERTEX_ARRAY_STRIDE = 0x807C as i32
public const NORMAL_ARRAY_TYPE = 0x807E as i32
public const NORMAL_ARRAY_STRIDE = 0x807F as i32
public const COLOR_ARRAY_SIZE = 0x8081 as i32
public const COLOR_ARRAY_TYPE = 0x8082 as i32
public const COLOR_ARRAY_STRIDE = 0x8083 as i32
public const INDEX_ARRAY_TYPE = 0x8085 as i32
public const INDEX_ARRAY_STRIDE = 0x8086 as i32
public const TEXTURE_COORD_ARRAY_SIZE = 0x8088 as i32
public const TEXTURE_COORD_ARRAY_TYPE = 0x8089 as i32
public const TEXTURE_COORD_ARRAY_STRIDE = 0x808A as i32
public const EDGE_FLAG_ARRAY_STRIDE = 0x808C as i32
public const VERTEX_ARRAY_POINTER = 0x808E as i32
public const NORMAL_ARRAY_POINTER = 0x808F as i32
public const COLOR_ARRAY_POINTER = 0x8090 as i32
public const INDEX_ARRAY_POINTER = 0x8091 as i32
public const TEXTURE_COORD_ARRAY_POINTER = 0x8092 as i32
public const EDGE_FLAG_ARRAY_POINTER = 0x8093 as i32
public const MULTISAMPLE = 0x809D as i32
public const SAMPLE_ALPHA_TO_COVERAGE = 0x809E as i32
public const SAMPLE_ALPHA_TO_ONE = 0x809F as i32
public const SAMPLE_COVERAGE = 0x80A0 as i32
public const SAMPLE_BUFFERS = 0x80A8 as i32
public const SAMPLES = 0x80A9 as i32
public const SAMPLE_COVERAGE_VALUE = 0x80AA as i32
public const SAMPLE_COVERAGE_INVERT = 0x80AB as i32
public const BLEND_DST_RGB = 0x80C8 as i32
public const BLEND_SRC_RGB = 0x80C9 as i32
public const BLEND_DST_ALPHA = 0x80CA as i32
public const BLEND_SRC_ALPHA = 0x80CB as i32
public const COLOR_TABLE = 0x80D0 as i32
public const POST_CONVOLUTION_COLOR_TABLE = 0x80D1 as i32
public const POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2 as i32
public const PROXY_COLOR_TABLE = 0x80D3 as i32
public const PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4 as i32
public const PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5 as i32
public const BGR = 0x80E0 as i32
public const BGRA = 0x80E1 as i32
public const MAX_ELEMENTS_VERTICES = 0x80E8 as i32
public const MAX_ELEMENTS_INDICES = 0x80E9 as i32
public const PARAMETER_BUFFER = 0x80EE as i32
public const PARAMETER_BUFFER_BINDING = 0x80EF as i32
public const POINT_SIZE_MIN = 0x8126 as i32
public const POINT_SIZE_MAX = 0x8127 as i32
public const POINT_FADE_THRESHOLD_SIZE = 0x8128 as i32
public const POINT_DISTANCE_ATTENUATION = 0x8129 as i32
public const CLAMP_TO_BORDER = 0x812D as i32
public const CLAMP_TO_EDGE = 0x812F as i32
public const TEXTURE_MIN_LOD = 0x813A as i32
public const TEXTURE_MAX_LOD = 0x813B as i32
public const TEXTURE_BASE_LEVEL = 0x813C as i32
public const TEXTURE_MAX_LEVEL = 0x813D as i32
public const GENERATE_MIPMAP = 0x8191 as i32
public const GENERATE_MIPMAP_HINT = 0x8192 as i32
public const DEPTH_COMPONENT16 = 0x81A5 as i32
public const DEPTH_COMPONENT24 = 0x81A6 as i32
public const DEPTH_COMPONENT32 = 0x81A7 as i32
public const LIGHT_MODEL_COLOR_CONTROL = 0x81F8 as i32
public const SINGLE_COLOR = 0x81F9 as i32
public const SEPARATE_SPECULAR_COLOR = 0x81FA as i32
public const FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210 as i32
public const FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211 as i32
public const FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212 as i32
public const FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213 as i32
public const FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214 as i32
public const FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215 as i32
public const FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216 as i32
public const FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217 as i32
public const FRAMEBUFFER_DEFAULT = 0x8218 as i32
public const FRAMEBUFFER_UNDEFINED = 0x8219 as i32
public const DEPTH_STENCIL_ATTACHMENT = 0x821A as i32
public const MAJOR_VERSION = 0x821B as i32
public const MINOR_VERSION = 0x821C as i32
public const NUM_EXTENSIONS = 0x821D as i32
public const CONTEXT_FLAGS = 0x821E as i32
public const BUFFER_IMMUTABLE_STORAGE = 0x821F as i32
public const BUFFER_STORAGE_FLAGS = 0x8220 as i32
public const PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221 as i32
public const INDEX = 0x8222 as i32
public const COMPRESSED_RED = 0x8225 as i32
public const COMPRESSED_RG = 0x8226 as i32
public const RG = 0x8227 as i32
public const RG_INTEGER = 0x8228 as i32
public const R8 = 0x8229 as i32
public const R16 = 0x822A as i32
public const RG8 = 0x822B as i32
public const RG16 = 0x822C as i32
public const R16F = 0x822D as i32
public const R32F = 0x822E as i32
public const RG16F = 0x822F as i32
public const RG32F = 0x8230 as i32
public const R8I = 0x8231 as i32
public const R8UI = 0x8232 as i32
public const R16I = 0x8233 as i32
public const R16UI = 0x8234 as i32
public const R32I = 0x8235 as i32
public const R32UI = 0x8236 as i32
public const RG8I = 0x8237 as i32
public const RG8UI = 0x8238 as i32
public const RG16I = 0x8239 as i32
public const RG16UI = 0x823A as i32
public const RG32I = 0x823B as i32
public const RG32UI = 0x823C as i32
public const DEBUG_OUTPUT_SYNCHRONOUS = 0x8242 as i32
public const DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243 as i32
public const DEBUG_CALLBACK_FUNCTION = 0x8244 as i32
public const DEBUG_CALLBACK_USER_PARAM = 0x8245 as i32
public const DEBUG_SOURCE_API = 0x8246 as i32
public const DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247 as i32
public const DEBUG_SOURCE_SHADER_COMPILER = 0x8248 as i32
public const DEBUG_SOURCE_THIRD_PARTY = 0x8249 as i32
public const DEBUG_SOURCE_APPLICATION = 0x824A as i32
public const DEBUG_SOURCE_OTHER = 0x824B as i32
public const DEBUG_TYPE_ERROR = 0x824C as i32
public const DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D as i32
public const DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E as i32
public const DEBUG_TYPE_PORTABILITY = 0x824F as i32
public const DEBUG_TYPE_PERFORMANCE = 0x8250 as i32
public const DEBUG_TYPE_OTHER = 0x8251 as i32
public const LOSE_CONTEXT_ON_RESET = 0x8252 as i32
public const GUILTY_CONTEXT_RESET = 0x8253 as i32
public const INNOCENT_CONTEXT_RESET = 0x8254 as i32
public const UNKNOWN_CONTEXT_RESET = 0x8255 as i32
public const RESET_NOTIFICATION_STRATEGY = 0x8256 as i32
public const PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257 as i32
public const PROGRAM_SEPARABLE = 0x8258 as i32
public const ACTIVE_PROGRAM = 0x8259 as i32
public const PROGRAM_PIPELINE_BINDING = 0x825A as i32
public const MAX_VIEWPORTS = 0x825B as i32
public const VIEWPORT_SUBPIXEL_BITS = 0x825C as i32
public const VIEWPORT_BOUNDS_RANGE = 0x825D as i32
public const LAYER_PROVOKING_VERTEX = 0x825E as i32
public const VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F as i32
public const UNDEFINED_VERTEX = 0x8260 as i32
public const NO_RESET_NOTIFICATION = 0x8261 as i32
public const MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262 as i32
public const MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263 as i32
public const MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264 as i32
public const MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265 as i32
public const MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266 as i32
public const COMPUTE_WORK_GROUP_SIZE = 0x8267 as i32
public const DEBUG_TYPE_MARKER = 0x8268 as i32
public const DEBUG_TYPE_PUSH_GROUP = 0x8269 as i32
public const DEBUG_TYPE_POP_GROUP = 0x826A as i32
public const DEBUG_SEVERITY_NOTIFICATION = 0x826B as i32
public const MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C as i32
public const DEBUG_GROUP_STACK_DEPTH = 0x826D as i32
public const MAX_UNIFORM_LOCATIONS = 0x826E as i32
public const INTERNALFORMAT_SUPPORTED = 0x826F as i32
public const INTERNALFORMAT_PREFERRED = 0x8270 as i32
public const INTERNALFORMAT_RED_SIZE = 0x8271 as i32
public const INTERNALFORMAT_GREEN_SIZE = 0x8272 as i32
public const INTERNALFORMAT_BLUE_SIZE = 0x8273 as i32
public const INTERNALFORMAT_ALPHA_SIZE = 0x8274 as i32
public const INTERNALFORMAT_DEPTH_SIZE = 0x8275 as i32
public const INTERNALFORMAT_STENCIL_SIZE = 0x8276 as i32
public const INTERNALFORMAT_SHARED_SIZE = 0x8277 as i32
public const INTERNALFORMAT_RED_TYPE = 0x8278 as i32
public const INTERNALFORMAT_GREEN_TYPE = 0x8279 as i32
public const INTERNALFORMAT_BLUE_TYPE = 0x827A as i32
public const INTERNALFORMAT_ALPHA_TYPE = 0x827B as i32
public const INTERNALFORMAT_DEPTH_TYPE = 0x827C as i32
public const INTERNALFORMAT_STENCIL_TYPE = 0x827D as i32
public const MAX_WIDTH = 0x827E as i32
public const MAX_HEIGHT = 0x827F as i32
public const MAX_DEPTH = 0x8280 as i32
public const MAX_LAYERS = 0x8281 as i32
public const MAX_COMBINED_DIMENSIONS = 0x8282 as i32
public const COLOR_COMPONENTS = 0x8283 as i32
public const DEPTH_COMPONENTS = 0x8284 as i32
public const STENCIL_COMPONENTS = 0x8285 as i32
public const COLOR_RENDERABLE = 0x8286 as i32
public const DEPTH_RENDERABLE = 0x8287 as i32
public const STENCIL_RENDERABLE = 0x8288 as i32
public const FRAMEBUFFER_RENDERABLE = 0x8289 as i32
public const FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A as i32
public const FRAMEBUFFER_BLEND = 0x828B as i32
public const READ_PIXELS = 0x828C as i32
public const READ_PIXELS_FORMAT = 0x828D as i32
public const READ_PIXELS_TYPE = 0x828E as i32
public const TEXTURE_IMAGE_FORMAT = 0x828F as i32
public const TEXTURE_IMAGE_TYPE = 0x8290 as i32
public const GET_TEXTURE_IMAGE_FORMAT = 0x8291 as i32
public const GET_TEXTURE_IMAGE_TYPE = 0x8292 as i32
public const MIPMAP = 0x8293 as i32
public const MANUAL_GENERATE_MIPMAP = 0x8294 as i32
public const AUTO_GENERATE_MIPMAP = 0x8295 as i32
public const COLOR_ENCODING = 0x8296 as i32
public const SRGB_READ = 0x8297 as i32
public const SRGB_WRITE = 0x8298 as i32
public const FILTER = 0x829A as i32
public const VERTEX_TEXTURE = 0x829B as i32
public const TESS_CONTROL_TEXTURE = 0x829C as i32
public const TESS_EVALUATION_TEXTURE = 0x829D as i32
public const GEOMETRY_TEXTURE = 0x829E as i32
public const FRAGMENT_TEXTURE = 0x829F as i32
public const COMPUTE_TEXTURE = 0x82A0 as i32
public const TEXTURE_SHADOW = 0x82A1 as i32
public const TEXTURE_GATHER = 0x82A2 as i32
public const TEXTURE_GATHER_SHADOW = 0x82A3 as i32
public const SHADER_IMAGE_LOAD = 0x82A4 as i32
public const SHADER_IMAGE_STORE = 0x82A5 as i32
public const SHADER_IMAGE_ATOMIC = 0x82A6 as i32
public const IMAGE_TEXEL_SIZE = 0x82A7 as i32
public const IMAGE_COMPATIBILITY_CLASS = 0x82A8 as i32
public const IMAGE_PIXEL_FORMAT = 0x82A9 as i32
public const IMAGE_PIXEL_TYPE = 0x82AA as i32
public const SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC as i32
public const SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD as i32
public const SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE as i32
public const SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF as i32
public const TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1 as i32
public const TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2 as i32
public const TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3 as i32
public const CLEAR_BUFFER = 0x82B4 as i32
public const TEXTURE_VIEW = 0x82B5 as i32
public const VIEW_COMPATIBILITY_CLASS = 0x82B6 as i32
public const FULL_SUPPORT = 0x82B7 as i32
public const CAVEAT_SUPPORT = 0x82B8 as i32
public const IMAGE_CLASS_4_X_32 = 0x82B9 as i32
public const IMAGE_CLASS_2_X_32 = 0x82BA as i32
public const IMAGE_CLASS_1_X_32 = 0x82BB as i32
public const IMAGE_CLASS_4_X_16 = 0x82BC as i32
public const IMAGE_CLASS_2_X_16 = 0x82BD as i32
public const IMAGE_CLASS_1_X_16 = 0x82BE as i32
public const IMAGE_CLASS_4_X_8 = 0x82BF as i32
public const IMAGE_CLASS_2_X_8 = 0x82C0 as i32
public const IMAGE_CLASS_1_X_8 = 0x82C1 as i32
public const IMAGE_CLASS_11_11_10 = 0x82C2 as i32
public const IMAGE_CLASS_10_10_10_2 = 0x82C3 as i32
public const VIEW_CLASS_128_BITS = 0x82C4 as i32
public const VIEW_CLASS_96_BITS = 0x82C5 as i32
public const VIEW_CLASS_64_BITS = 0x82C6 as i32
public const VIEW_CLASS_48_BITS = 0x82C7 as i32
public const VIEW_CLASS_32_BITS = 0x82C8 as i32
public const VIEW_CLASS_24_BITS = 0x82C9 as i32
public const VIEW_CLASS_16_BITS = 0x82CA as i32
public const VIEW_CLASS_8_BITS = 0x82CB as i32
public const VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC as i32
public const VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD as i32
public const VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE as i32
public const VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF as i32
public const VIEW_CLASS_RGTC1_RED = 0x82D0 as i32
public const VIEW_CLASS_RGTC2_RG = 0x82D1 as i32
public const VIEW_CLASS_BPTC_UNORM = 0x82D2 as i32
public const VIEW_CLASS_BPTC_FLOAT = 0x82D3 as i32
public const VERTEX_ATTRIB_BINDING = 0x82D4 as i32
public const VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5 as i32
public const VERTEX_BINDING_DIVISOR = 0x82D6 as i32
public const VERTEX_BINDING_OFFSET = 0x82D7 as i32
public const VERTEX_BINDING_STRIDE = 0x82D8 as i32
public const MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9 as i32
public const MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA as i32
public const TEXTURE_VIEW_MIN_LEVEL = 0x82DB as i32
public const TEXTURE_VIEW_NUM_LEVELS = 0x82DC as i32
public const TEXTURE_VIEW_MIN_LAYER = 0x82DD as i32
public const TEXTURE_VIEW_NUM_LAYERS = 0x82DE as i32
public const TEXTURE_IMMUTABLE_LEVELS = 0x82DF as i32
public const BUFFER = 0x82E0 as i32
public const SHADER = 0x82E1 as i32
public const PROGRAM = 0x82E2 as i32
public const QUERY = 0x82E3 as i32
public const PROGRAM_PIPELINE = 0x82E4 as i32
public const MAX_VERTEX_ATTRIB_STRIDE = 0x82E5 as i32
public const SAMPLER = 0x82E6 as i32
public const DISPLAY_LIST = 0x82E7 as i32
public const MAX_LABEL_LENGTH = 0x82E8 as i32
public const NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9 as i32
public const QUERY_TARGET = 0x82EA as i32
public const TRANSFORM_FEEDBACK_OVERFLOW = 0x82EC as i32
public const TRANSFORM_FEEDBACK_STREAM_OVERFLOW = 0x82ED as i32
public const VERTICES_SUBMITTED = 0x82EE as i32
public const PRIMITIVES_SUBMITTED = 0x82EF as i32
public const VERTEX_SHADER_INVOCATIONS = 0x82F0 as i32
public const TESS_CONTROL_SHADER_PATCHES = 0x82F1 as i32
public const TESS_EVALUATION_SHADER_INVOCATIONS = 0x82F2 as i32
public const GEOMETRY_SHADER_PRIMITIVES_EMITTED = 0x82F3 as i32
public const FRAGMENT_SHADER_INVOCATIONS = 0x82F4 as i32
public const COMPUTE_SHADER_INVOCATIONS = 0x82F5 as i32
public const CLIPPING_INPUT_PRIMITIVES = 0x82F6 as i32
public const CLIPPING_OUTPUT_PRIMITIVES = 0x82F7 as i32
public const MAX_CULL_DISTANCES = 0x82F9 as i32
public const MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA as i32
public const CONTEXT_RELEASE_BEHAVIOR = 0x82FB as i32
public const CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC as i32
public const UNSIGNED_BYTE_2_3_3_REV = 0x8362 as i32
public const UNSIGNED_SHORT_5_6_5 = 0x8363 as i32
public const UNSIGNED_SHORT_5_6_5_REV = 0x8364 as i32
public const UNSIGNED_SHORT_4_4_4_4_REV = 0x8365 as i32
public const UNSIGNED_SHORT_1_5_5_5_REV = 0x8366 as i32
public const UNSIGNED_INT_8_8_8_8_REV = 0x8367 as i32
public const UNSIGNED_INT_2_10_10_10_REV = 0x8368 as i32
public const MIRRORED_REPEAT = 0x8370 as i32
public const FOG_COORDINATE_SOURCE = 0x8450 as i32
public const FOG_COORD_SRC = 0x8450 as i32
public const FOG_COORDINATE = 0x8451 as i32
public const FOG_COORD = 0x8451 as i32
public const FRAGMENT_DEPTH = 0x8452 as i32
public const CURRENT_FOG_COORDINATE = 0x8453 as i32
public const CURRENT_FOG_COORD = 0x8453 as i32
public const FOG_COORDINATE_ARRAY_TYPE = 0x8454 as i32
public const FOG_COORD_ARRAY_TYPE = 0x8454 as i32
public const FOG_COORDINATE_ARRAY_STRIDE = 0x8455 as i32
public const FOG_COORD_ARRAY_STRIDE = 0x8455 as i32
public const FOG_COORDINATE_ARRAY_POINTER = 0x8456 as i32
public const FOG_COORD_ARRAY_POINTER = 0x8456 as i32
public const FOG_COORDINATE_ARRAY = 0x8457 as i32
public const FOG_COORD_ARRAY = 0x8457 as i32
public const COLOR_SUM = 0x8458 as i32
public const CURRENT_SECONDARY_COLOR = 0x8459 as i32
public const SECONDARY_COLOR_ARRAY_SIZE = 0x845A as i32
public const SECONDARY_COLOR_ARRAY_TYPE = 0x845B as i32
public const SECONDARY_COLOR_ARRAY_STRIDE = 0x845C as i32
public const SECONDARY_COLOR_ARRAY_POINTER = 0x845D as i32
public const SECONDARY_COLOR_ARRAY = 0x845E as i32
public const CURRENT_RASTER_SECONDARY_COLOR = 0x845F as i32
public const ALIASED_POINT_SIZE_RANGE = 0x846D as i32
public const ALIASED_LINE_WIDTH_RANGE = 0x846E as i32
public const TEXTURE0 = 0x84C0 as i32
public const TEXTURE1 = 0x84C1 as i32
public const TEXTURE2 = 0x84C2 as i32
public const TEXTURE3 = 0x84C3 as i32
public const TEXTURE4 = 0x84C4 as i32
public const TEXTURE5 = 0x84C5 as i32
public const TEXTURE6 = 0x84C6 as i32
public const TEXTURE7 = 0x84C7 as i32
public const TEXTURE8 = 0x84C8 as i32
public const TEXTURE9 = 0x84C9 as i32
public const TEXTURE10 = 0x84CA as i32
public const TEXTURE11 = 0x84CB as i32
public const TEXTURE12 = 0x84CC as i32
public const TEXTURE13 = 0x84CD as i32
public const TEXTURE14 = 0x84CE as i32
public const TEXTURE15 = 0x84CF as i32
public const TEXTURE16 = 0x84D0 as i32
public const TEXTURE17 = 0x84D1 as i32
public const TEXTURE18 = 0x84D2 as i32
public const TEXTURE19 = 0x84D3 as i32
public const TEXTURE20 = 0x84D4 as i32
public const TEXTURE21 = 0x84D5 as i32
public const TEXTURE22 = 0x84D6 as i32
public const TEXTURE23 = 0x84D7 as i32
public const TEXTURE24 = 0x84D8 as i32
public const TEXTURE25 = 0x84D9 as i32
public const TEXTURE26 = 0x84DA as i32
public const TEXTURE27 = 0x84DB as i32
public const TEXTURE28 = 0x84DC as i32
public const TEXTURE29 = 0x84DD as i32
public const TEXTURE30 = 0x84DE as i32
public const TEXTURE31 = 0x84DF as i32
public const ACTIVE_TEXTURE = 0x84E0 as i32
public const CLIENT_ACTIVE_TEXTURE = 0x84E1 as i32
public const MAX_TEXTURE_UNITS = 0x84E2 as i32
public const TRANSPOSE_MODELVIEW_MATRIX = 0x84E3 as i32
public const TRANSPOSE_PROJECTION_MATRIX = 0x84E4 as i32
public const TRANSPOSE_TEXTURE_MATRIX = 0x84E5 as i32
public const TRANSPOSE_COLOR_MATRIX = 0x84E6 as i32
public const SUBTRACT = 0x84E7 as i32
public const MAX_RENDERBUFFER_SIZE = 0x84E8 as i32
public const COMPRESSED_ALPHA = 0x84E9 as i32
public const COMPRESSED_LUMINANCE = 0x84EA as i32
public const COMPRESSED_LUMINANCE_ALPHA = 0x84EB as i32
public const COMPRESSED_INTENSITY = 0x84EC as i32
public const COMPRESSED_RGB = 0x84ED as i32
public const COMPRESSED_RGBA = 0x84EE as i32
public const TEXTURE_COMPRESSION_HINT = 0x84EF as i32
public const UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0 as i32
public const UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1 as i32
public const TEXTURE_RECTANGLE = 0x84F5 as i32
public const TEXTURE_BINDING_RECTANGLE = 0x84F6 as i32
public const PROXY_TEXTURE_RECTANGLE = 0x84F7 as i32
public const MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8 as i32
public const DEPTH_STENCIL = 0x84F9 as i32
public const UNSIGNED_INT_24_8 = 0x84FA as i32
public const MAX_TEXTURE_LOD_BIAS = 0x84FD as i32
public const TEXTURE_MAX_ANISOTROPY = 0x84FE as i32
public const MAX_TEXTURE_MAX_ANISOTROPY = 0x84FF as i32
public const TEXTURE_FILTER_CONTROL = 0x8500 as i32
public const TEXTURE_LOD_BIAS = 0x8501 as i32
public const INCR_WRAP = 0x8507 as i32
public const DECR_WRAP = 0x8508 as i32
public const NORMAL_MAP = 0x8511 as i32
public const REFLECTION_MAP = 0x8512 as i32
public const TEXTURE_CUBE_MAP = 0x8513 as i32
public const TEXTURE_BINDING_CUBE_MAP = 0x8514 as i32
public const TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515 as i32
public const TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516 as i32
public const TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517 as i32
public const TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518 as i32
public const TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519 as i32
public const TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A as i32
public const PROXY_TEXTURE_CUBE_MAP = 0x851B as i32
public const MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C as i32
public const COMBINE = 0x8570 as i32
public const COMBINE_RGB = 0x8571 as i32
public const COMBINE_ALPHA = 0x8572 as i32
public const RGB_SCALE = 0x8573 as i32
public const ADD_SIGNED = 0x8574 as i32
public const INTERPOLATE = 0x8575 as i32
public const CONSTANT = 0x8576 as i32
public const PRIMARY_COLOR = 0x8577 as i32
public const PREVIOUS = 0x8578 as i32
public const SOURCE0_RGB = 0x8580 as i32
public const SRC0_RGB = 0x8580 as i32
public const SOURCE1_RGB = 0x8581 as i32
public const SRC1_RGB = 0x8581 as i32
public const SOURCE2_RGB = 0x8582 as i32
public const SRC2_RGB = 0x8582 as i32
public const SOURCE0_ALPHA = 0x8588 as i32
public const SRC0_ALPHA = 0x8588 as i32
public const SOURCE1_ALPHA = 0x8589 as i32
public const SRC1_ALPHA = 0x8589 as i32
public const SOURCE2_ALPHA = 0x858A as i32
public const SRC2_ALPHA = 0x858A as i32
public const OPERAND0_RGB = 0x8590 as i32
public const OPERAND1_RGB = 0x8591 as i32
public const OPERAND2_RGB = 0x8592 as i32
public const OPERAND0_ALPHA = 0x8598 as i32
public const OPERAND1_ALPHA = 0x8599 as i32
public const OPERAND2_ALPHA = 0x859A as i32
public const VERTEX_ARRAY_BINDING = 0x85B5 as i32
public const VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622 as i32
public const VERTEX_ATTRIB_ARRAY_SIZE = 0x8623 as i32
public const VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624 as i32
public const VERTEX_ATTRIB_ARRAY_TYPE = 0x8625 as i32
public const CURRENT_VERTEX_ATTRIB = 0x8626 as i32
public const VERTEX_PROGRAM_POINT_SIZE = 0x8642 as i32
public const PROGRAM_POINT_SIZE = 0x8642 as i32
public const VERTEX_PROGRAM_TWO_SIDE = 0x8643 as i32
public const VERTEX_ATTRIB_ARRAY_POINTER = 0x8645 as i32
public const DEPTH_CLAMP = 0x864F as i32
public const TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0 as i32
public const TEXTURE_COMPRESSED = 0x86A1 as i32
public const NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2 as i32
public const COMPRESSED_TEXTURE_FORMATS = 0x86A3 as i32
public const DOT3_RGB = 0x86AE as i32
public const DOT3_RGBA = 0x86AF as i32
public const PROGRAM_BINARY_LENGTH = 0x8741 as i32
public const MIRROR_CLAMP_TO_EDGE = 0x8743 as i32
public const VERTEX_ATTRIB_ARRAY_LONG = 0x874E as i32
public const BUFFER_SIZE = 0x8764 as i32
public const BUFFER_USAGE = 0x8765 as i32
public const NUM_PROGRAM_BINARY_FORMATS = 0x87FE as i32
public const PROGRAM_BINARY_FORMATS = 0x87FF as i32
public const STENCIL_BACK_FUNC = 0x8800 as i32
public const STENCIL_BACK_FAIL = 0x8801 as i32
public const STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802 as i32
public const STENCIL_BACK_PASS_DEPTH_PASS = 0x8803 as i32
public const RGBA32F = 0x8814 as i32
public const RGB32F = 0x8815 as i32
public const RGBA16F = 0x881A as i32
public const RGB16F = 0x881B as i32
public const MAX_DRAW_BUFFERS = 0x8824 as i32
public const DRAW_BUFFER0 = 0x8825 as i32
public const DRAW_BUFFER1 = 0x8826 as i32
public const DRAW_BUFFER2 = 0x8827 as i32
public const DRAW_BUFFER3 = 0x8828 as i32
public const DRAW_BUFFER4 = 0x8829 as i32
public const DRAW_BUFFER5 = 0x882A as i32
public const DRAW_BUFFER6 = 0x882B as i32
public const DRAW_BUFFER7 = 0x882C as i32
public const DRAW_BUFFER8 = 0x882D as i32
public const DRAW_BUFFER9 = 0x882E as i32
public const DRAW_BUFFER10 = 0x882F as i32
public const DRAW_BUFFER11 = 0x8830 as i32
public const DRAW_BUFFER12 = 0x8831 as i32
public const DRAW_BUFFER13 = 0x8832 as i32
public const DRAW_BUFFER14 = 0x8833 as i32
public const DRAW_BUFFER15 = 0x8834 as i32
public const BLEND_EQUATION_ALPHA = 0x883D as i32
public const TEXTURE_DEPTH_SIZE = 0x884A as i32
public const DEPTH_TEXTURE_MODE = 0x884B as i32
public const TEXTURE_COMPARE_MODE = 0x884C as i32
public const TEXTURE_COMPARE_FUNC = 0x884D as i32
public const COMPARE_R_TO_TEXTURE = 0x884E as i32
public const COMPARE_REF_TO_TEXTURE = 0x884E as i32
public const TEXTURE_CUBE_MAP_SEAMLESS = 0x884F as i32
public const POINT_SPRITE = 0x8861 as i32
public const COORD_REPLACE = 0x8862 as i32
public const QUERY_COUNTER_BITS = 0x8864 as i32
public const CURRENT_QUERY = 0x8865 as i32
public const QUERY_RESULT = 0x8866 as i32
public const QUERY_RESULT_AVAILABLE = 0x8867 as i32
public const MAX_VERTEX_ATTRIBS = 0x8869 as i32
public const VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A as i32
public const MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C as i32
public const MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D as i32
public const MAX_TEXTURE_COORDS = 0x8871 as i32
public const MAX_TEXTURE_IMAGE_UNITS = 0x8872 as i32
public const GEOMETRY_SHADER_INVOCATIONS = 0x887F as i32
public const ARRAY_BUFFER = 0x8892 as i32
public const ELEMENT_ARRAY_BUFFER = 0x8893 as i32
public const ARRAY_BUFFER_BINDING = 0x8894 as i32
public const ELEMENT_ARRAY_BUFFER_BINDING = 0x8895 as i32
public const VERTEX_ARRAY_BUFFER_BINDING = 0x8896 as i32
public const NORMAL_ARRAY_BUFFER_BINDING = 0x8897 as i32
public const COLOR_ARRAY_BUFFER_BINDING = 0x8898 as i32
public const INDEX_ARRAY_BUFFER_BINDING = 0x8899 as i32
public const TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A as i32
public const EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B as i32
public const SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C as i32
public const FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D as i32
public const FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D as i32
public const WEIGHT_ARRAY_BUFFER_BINDING = 0x889E as i32
public const VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F as i32
public const READ_ONLY = 0x88B8 as i32
public const WRITE_ONLY = 0x88B9 as i32
public const READ_WRITE = 0x88BA as i32
public const BUFFER_ACCESS = 0x88BB as i32
public const BUFFER_MAPPED = 0x88BC as i32
public const BUFFER_MAP_POINTER = 0x88BD as i32
public const TIME_ELAPSED = 0x88BF as i32
public const STREAM_DRAW = 0x88E0 as i32
public const STREAM_READ = 0x88E1 as i32
public const STREAM_COPY = 0x88E2 as i32
public const STATIC_DRAW = 0x88E4 as i32
public const STATIC_READ = 0x88E5 as i32
public const STATIC_COPY = 0x88E6 as i32
public const DYNAMIC_DRAW = 0x88E8 as i32
public const DYNAMIC_READ = 0x88E9 as i32
public const DYNAMIC_COPY = 0x88EA as i32
public const PIXEL_PACK_BUFFER = 0x88EB as i32
public const PIXEL_UNPACK_BUFFER = 0x88EC as i32
public const PIXEL_PACK_BUFFER_BINDING = 0x88ED as i32
public const PIXEL_UNPACK_BUFFER_BINDING = 0x88EF as i32
public const DEPTH24_STENCIL8 = 0x88F0 as i32
public const TEXTURE_STENCIL_SIZE = 0x88F1 as i32
public const SRC1_COLOR = 0x88F9 as i32
public const ONE_MINUS_SRC1_COLOR = 0x88FA as i32
public const ONE_MINUS_SRC1_ALPHA = 0x88FB as i32
public const MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC as i32
public const VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD as i32
public const VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE as i32
public const MAX_ARRAY_TEXTURE_LAYERS = 0x88FF as i32
public const MIN_PROGRAM_TEXEL_OFFSET = 0x8904 as i32
public const MAX_PROGRAM_TEXEL_OFFSET = 0x8905 as i32
public const SAMPLES_PASSED = 0x8914 as i32
public const GEOMETRY_VERTICES_OUT = 0x8916 as i32
public const GEOMETRY_INPUT_TYPE = 0x8917 as i32
public const GEOMETRY_OUTPUT_TYPE = 0x8918 as i32
public const SAMPLER_BINDING = 0x8919 as i32
public const CLAMP_VERTEX_COLOR = 0x891A as i32
public const CLAMP_FRAGMENT_COLOR = 0x891B as i32
public const CLAMP_READ_COLOR = 0x891C as i32
public const FIXED_ONLY = 0x891D as i32
public const UNIFORM_BUFFER = 0x8A11 as i32
public const UNIFORM_BUFFER_BINDING = 0x8A28 as i32
public const UNIFORM_BUFFER_START = 0x8A29 as i32
public const UNIFORM_BUFFER_SIZE = 0x8A2A as i32
public const MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B as i32
public const MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C as i32
public const MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D as i32
public const MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E as i32
public const MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F as i32
public const MAX_UNIFORM_BLOCK_SIZE = 0x8A30 as i32
public const MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31 as i32
public const MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32 as i32
public const MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33 as i32
public const UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34 as i32
public const ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35 as i32
public const ACTIVE_UNIFORM_BLOCKS = 0x8A36 as i32
public const UNIFORM_TYPE = 0x8A37 as i32
public const UNIFORM_SIZE = 0x8A38 as i32
public const UNIFORM_NAME_LENGTH = 0x8A39 as i32
public const UNIFORM_BLOCK_INDEX = 0x8A3A as i32
public const UNIFORM_OFFSET = 0x8A3B as i32
public const UNIFORM_ARRAY_STRIDE = 0x8A3C as i32
public const UNIFORM_MATRIX_STRIDE = 0x8A3D as i32
public const UNIFORM_IS_ROW_MAJOR = 0x8A3E as i32
public const UNIFORM_BLOCK_BINDING = 0x8A3F as i32
public const UNIFORM_BLOCK_DATA_SIZE = 0x8A40 as i32
public const UNIFORM_BLOCK_NAME_LENGTH = 0x8A41 as i32
public const UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42 as i32
public const UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43 as i32
public const UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44 as i32
public const UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45 as i32
public const UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46 as i32
public const FRAGMENT_SHADER = 0x8B30 as i32
public const VERTEX_SHADER = 0x8B31 as i32
public const MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49 as i32
public const MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A as i32
public const MAX_VARYING_FLOATS = 0x8B4B as i32
public const MAX_VARYING_COMPONENTS = 0x8B4B as i32
public const MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C as i32
public const MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D as i32
public const SHADER_TYPE = 0x8B4F as i32
public const FLOAT_VEC2 = 0x8B50 as i32
public const FLOAT_VEC3 = 0x8B51 as i32
public const FLOAT_VEC4 = 0x8B52 as i32
public const INT_VEC2 = 0x8B53 as i32
public const INT_VEC3 = 0x8B54 as i32
public const INT_VEC4 = 0x8B55 as i32
public const BOOL = 0x8B56 as i32
public const BOOL_VEC2 = 0x8B57 as i32
public const BOOL_VEC3 = 0x8B58 as i32
public const BOOL_VEC4 = 0x8B59 as i32
public const FLOAT_MAT2 = 0x8B5A as i32
public const FLOAT_MAT3 = 0x8B5B as i32
public const FLOAT_MAT4 = 0x8B5C as i32
public const SAMPLER_1D = 0x8B5D as i32
public const SAMPLER_2D = 0x8B5E as i32
public const SAMPLER_3D = 0x8B5F as i32
public const SAMPLER_CUBE = 0x8B60 as i32
public const SAMPLER_1D_SHADOW = 0x8B61 as i32
public const SAMPLER_2D_SHADOW = 0x8B62 as i32
public const SAMPLER_2D_RECT = 0x8B63 as i32
public const SAMPLER_2D_RECT_SHADOW = 0x8B64 as i32
public const FLOAT_MAT2x3 = 0x8B65 as i32
public const FLOAT_MAT2x4 = 0x8B66 as i32
public const FLOAT_MAT3x2 = 0x8B67 as i32
public const FLOAT_MAT3x4 = 0x8B68 as i32
public const FLOAT_MAT4x2 = 0x8B69 as i32
public const FLOAT_MAT4x3 = 0x8B6A as i32
public const DELETE_STATUS = 0x8B80 as i32
public const COMPILE_STATUS = 0x8B81 as i32
public const LINK_STATUS = 0x8B82 as i32
public const VALIDATE_STATUS = 0x8B83 as i32
public const INFO_LOG_LENGTH = 0x8B84 as i32
public const ATTACHED_SHADERS = 0x8B85 as i32
public const ACTIVE_UNIFORMS = 0x8B86 as i32
public const ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87 as i32
public const SHADER_SOURCE_LENGTH = 0x8B88 as i32
public const ACTIVE_ATTRIBUTES = 0x8B89 as i32
public const ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A as i32
public const FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B as i32
public const SHADING_LANGUAGE_VERSION = 0x8B8C as i32
public const CURRENT_PROGRAM = 0x8B8D as i32
public const IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A as i32
public const IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B as i32
public const TEXTURE_RED_TYPE = 0x8C10 as i32
public const TEXTURE_GREEN_TYPE = 0x8C11 as i32
public const TEXTURE_BLUE_TYPE = 0x8C12 as i32
public const TEXTURE_ALPHA_TYPE = 0x8C13 as i32
public const TEXTURE_LUMINANCE_TYPE = 0x8C14 as i32
public const TEXTURE_INTENSITY_TYPE = 0x8C15 as i32
public const TEXTURE_DEPTH_TYPE = 0x8C16 as i32
public const UNSIGNED_NORMALIZED = 0x8C17 as i32
public const TEXTURE_1D_ARRAY = 0x8C18 as i32
public const PROXY_TEXTURE_1D_ARRAY = 0x8C19 as i32
public const TEXTURE_2D_ARRAY = 0x8C1A as i32
public const PROXY_TEXTURE_2D_ARRAY = 0x8C1B as i32
public const TEXTURE_BINDING_1D_ARRAY = 0x8C1C as i32
public const TEXTURE_BINDING_2D_ARRAY = 0x8C1D as i32
public const MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29 as i32
public const TEXTURE_BUFFER = 0x8C2A as i32
public const TEXTURE_BUFFER_BINDING = 0x8C2A as i32
public const MAX_TEXTURE_BUFFER_SIZE = 0x8C2B as i32
public const TEXTURE_BINDING_BUFFER = 0x8C2C as i32
public const TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D as i32
public const ANY_SAMPLES_PASSED = 0x8C2F as i32
public const SAMPLE_SHADING = 0x8C36 as i32
public const MIN_SAMPLE_SHADING_VALUE = 0x8C37 as i32
public const R11F_G11F_B10F = 0x8C3A as i32
public const UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B as i32
public const RGB9_E5 = 0x8C3D as i32
public const UNSIGNED_INT_5_9_9_9_REV = 0x8C3E as i32
public const TEXTURE_SHARED_SIZE = 0x8C3F as i32
public const SRGB = 0x8C40 as i32
public const SRGB8 = 0x8C41 as i32
public const SRGB_ALPHA = 0x8C42 as i32
public const SRGB8_ALPHA8 = 0x8C43 as i32
public const SLUMINANCE_ALPHA = 0x8C44 as i32
public const SLUMINANCE8_ALPHA8 = 0x8C45 as i32
public const SLUMINANCE = 0x8C46 as i32
public const SLUMINANCE8 = 0x8C47 as i32
public const COMPRESSED_SRGB = 0x8C48 as i32
public const COMPRESSED_SRGB_ALPHA = 0x8C49 as i32
public const COMPRESSED_SLUMINANCE = 0x8C4A as i32
public const COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B as i32
public const TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76 as i32
public const TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F as i32
public const MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80 as i32
public const TRANSFORM_FEEDBACK_VARYINGS = 0x8C83 as i32
public const TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84 as i32
public const TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85 as i32
public const PRIMITIVES_GENERATED = 0x8C87 as i32
public const TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88 as i32
public const RASTERIZER_DISCARD = 0x8C89 as i32
public const MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A as i32
public const MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B as i32
public const INTERLEAVED_ATTRIBS = 0x8C8C as i32
public const SEPARATE_ATTRIBS = 0x8C8D as i32
public const TRANSFORM_FEEDBACK_BUFFER = 0x8C8E as i32
public const TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F as i32
public const POINT_SPRITE_COORD_ORIGIN = 0x8CA0 as i32
public const LOWER_LEFT = 0x8CA1 as i32
public const UPPER_LEFT = 0x8CA2 as i32
public const STENCIL_BACK_REF = 0x8CA3 as i32
public const STENCIL_BACK_VALUE_MASK = 0x8CA4 as i32
public const STENCIL_BACK_WRITEMASK = 0x8CA5 as i32
public const DRAW_FRAMEBUFFER_BINDING = 0x8CA6 as i32
public const FRAMEBUFFER_BINDING = 0x8CA6 as i32
public const RENDERBUFFER_BINDING = 0x8CA7 as i32
public const READ_FRAMEBUFFER = 0x8CA8 as i32
public const DRAW_FRAMEBUFFER = 0x8CA9 as i32
public const READ_FRAMEBUFFER_BINDING = 0x8CAA as i32
public const RENDERBUFFER_SAMPLES = 0x8CAB as i32
public const DEPTH_COMPONENT32F = 0x8CAC as i32
public const DEPTH32F_STENCIL8 = 0x8CAD as i32
public const FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0 as i32
public const FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1 as i32
public const FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2 as i32
public const FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3 as i32
public const FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4 as i32
public const FRAMEBUFFER_COMPLETE = 0x8CD5 as i32
public const FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6 as i32
public const FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7 as i32
public const FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB as i32
public const FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC as i32
public const FRAMEBUFFER_UNSUPPORTED = 0x8CDD as i32
public const MAX_COLOR_ATTACHMENTS = 0x8CDF as i32
public const COLOR_ATTACHMENT0 = 0x8CE0 as i32
public const COLOR_ATTACHMENT1 = 0x8CE1 as i32
public const COLOR_ATTACHMENT2 = 0x8CE2 as i32
public const COLOR_ATTACHMENT3 = 0x8CE3 as i32
public const COLOR_ATTACHMENT4 = 0x8CE4 as i32
public const COLOR_ATTACHMENT5 = 0x8CE5 as i32
public const COLOR_ATTACHMENT6 = 0x8CE6 as i32
public const COLOR_ATTACHMENT7 = 0x8CE7 as i32
public const COLOR_ATTACHMENT8 = 0x8CE8 as i32
public const COLOR_ATTACHMENT9 = 0x8CE9 as i32
public const COLOR_ATTACHMENT10 = 0x8CEA as i32
public const COLOR_ATTACHMENT11 = 0x8CEB as i32
public const COLOR_ATTACHMENT12 = 0x8CEC as i32
public const COLOR_ATTACHMENT13 = 0x8CED as i32
public const COLOR_ATTACHMENT14 = 0x8CEE as i32
public const COLOR_ATTACHMENT15 = 0x8CEF as i32
public const COLOR_ATTACHMENT16 = 0x8CF0 as i32
public const COLOR_ATTACHMENT17 = 0x8CF1 as i32
public const COLOR_ATTACHMENT18 = 0x8CF2 as i32
public const COLOR_ATTACHMENT19 = 0x8CF3 as i32
public const COLOR_ATTACHMENT20 = 0x8CF4 as i32
public const COLOR_ATTACHMENT21 = 0x8CF5 as i32
public const COLOR_ATTACHMENT22 = 0x8CF6 as i32
public const COLOR_ATTACHMENT23 = 0x8CF7 as i32
public const COLOR_ATTACHMENT24 = 0x8CF8 as i32
public const COLOR_ATTACHMENT25 = 0x8CF9 as i32
public const COLOR_ATTACHMENT26 = 0x8CFA as i32
public const COLOR_ATTACHMENT27 = 0x8CFB as i32
public const COLOR_ATTACHMENT28 = 0x8CFC as i32
public const COLOR_ATTACHMENT29 = 0x8CFD as i32
public const COLOR_ATTACHMENT30 = 0x8CFE as i32
public const COLOR_ATTACHMENT31 = 0x8CFF as i32
public const DEPTH_ATTACHMENT = 0x8D00 as i32
public const STENCIL_ATTACHMENT = 0x8D20 as i32
public const FRAMEBUFFER = 0x8D40 as i32
public const RENDERBUFFER = 0x8D41 as i32
public const RENDERBUFFER_WIDTH = 0x8D42 as i32
public const RENDERBUFFER_HEIGHT = 0x8D43 as i32
public const RENDERBUFFER_INTERNAL_FORMAT = 0x8D44 as i32
public const STENCIL_INDEX1 = 0x8D46 as i32
public const STENCIL_INDEX4 = 0x8D47 as i32
public const STENCIL_INDEX8 = 0x8D48 as i32
public const STENCIL_INDEX16 = 0x8D49 as i32
public const RENDERBUFFER_RED_SIZE = 0x8D50 as i32
public const RENDERBUFFER_GREEN_SIZE = 0x8D51 as i32
public const RENDERBUFFER_BLUE_SIZE = 0x8D52 as i32
public const RENDERBUFFER_ALPHA_SIZE = 0x8D53 as i32
public const RENDERBUFFER_DEPTH_SIZE = 0x8D54 as i32
public const RENDERBUFFER_STENCIL_SIZE = 0x8D55 as i32
public const FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56 as i32
public const MAX_SAMPLES = 0x8D57 as i32
public const RGB565 = 0x8D62 as i32
public const PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69 as i32
public const ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A as i32
public const MAX_ELEMENT_INDEX = 0x8D6B as i32
public const RGBA32UI = 0x8D70 as i32
public const RGB32UI = 0x8D71 as i32
public const RGBA16UI = 0x8D76 as i32
public const RGB16UI = 0x8D77 as i32
public const RGBA8UI = 0x8D7C as i32
public const RGB8UI = 0x8D7D as i32
public const RGBA32I = 0x8D82 as i32
public const RGB32I = 0x8D83 as i32
public const RGBA16I = 0x8D88 as i32
public const RGB16I = 0x8D89 as i32
public const RGBA8I = 0x8D8E as i32
public const RGB8I = 0x8D8F as i32
public const RED_INTEGER = 0x8D94 as i32
public const GREEN_INTEGER = 0x8D95 as i32
public const BLUE_INTEGER = 0x8D96 as i32
public const ALPHA_INTEGER = 0x8D97 as i32
public const RGB_INTEGER = 0x8D98 as i32
public const RGBA_INTEGER = 0x8D99 as i32
public const BGR_INTEGER = 0x8D9A as i32
public const BGRA_INTEGER = 0x8D9B as i32
public const INT_2_10_10_10_REV = 0x8D9F as i32
public const FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7 as i32
public const FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8 as i32
public const FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD as i32
public const FRAMEBUFFER_SRGB = 0x8DB9 as i32
public const COMPRESSED_RED_RGTC1 = 0x8DBB as i32
public const COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC as i32
public const COMPRESSED_RG_RGTC2 = 0x8DBD as i32
public const COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE as i32
public const SAMPLER_1D_ARRAY = 0x8DC0 as i32
public const SAMPLER_2D_ARRAY = 0x8DC1 as i32
public const SAMPLER_BUFFER = 0x8DC2 as i32
public const SAMPLER_1D_ARRAY_SHADOW = 0x8DC3 as i32
public const SAMPLER_2D_ARRAY_SHADOW = 0x8DC4 as i32
public const SAMPLER_CUBE_SHADOW = 0x8DC5 as i32
public const UNSIGNED_INT_VEC2 = 0x8DC6 as i32
public const UNSIGNED_INT_VEC3 = 0x8DC7 as i32
public const UNSIGNED_INT_VEC4 = 0x8DC8 as i32
public const INT_SAMPLER_1D = 0x8DC9 as i32
public const INT_SAMPLER_2D = 0x8DCA as i32
public const INT_SAMPLER_3D = 0x8DCB as i32
public const INT_SAMPLER_CUBE = 0x8DCC as i32
public const INT_SAMPLER_2D_RECT = 0x8DCD as i32
public const INT_SAMPLER_1D_ARRAY = 0x8DCE as i32
public const INT_SAMPLER_2D_ARRAY = 0x8DCF as i32
public const INT_SAMPLER_BUFFER = 0x8DD0 as i32
public const UNSIGNED_INT_SAMPLER_1D = 0x8DD1 as i32
public const UNSIGNED_INT_SAMPLER_2D = 0x8DD2 as i32
public const UNSIGNED_INT_SAMPLER_3D = 0x8DD3 as i32
public const UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4 as i32
public const UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5 as i32
public const UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6 as i32
public const UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7 as i32
public const UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8 as i32
public const GEOMETRY_SHADER = 0x8DD9 as i32
public const MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF as i32
public const MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0 as i32
public const MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1 as i32
public const ACTIVE_SUBROUTINES = 0x8DE5 as i32
public const ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6 as i32
public const MAX_SUBROUTINES = 0x8DE7 as i32
public const MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8 as i32
public const LOW_FLOAT = 0x8DF0 as i32
public const MEDIUM_FLOAT = 0x8DF1 as i32
public const HIGH_FLOAT = 0x8DF2 as i32
public const LOW_INT = 0x8DF3 as i32
public const MEDIUM_INT = 0x8DF4 as i32
public const HIGH_INT = 0x8DF5 as i32
public const SHADER_BINARY_FORMATS = 0x8DF8 as i32
public const NUM_SHADER_BINARY_FORMATS = 0x8DF9 as i32
public const SHADER_COMPILER = 0x8DFA as i32
public const MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB as i32
public const MAX_VARYING_VECTORS = 0x8DFC as i32
public const MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD as i32
public const QUERY_WAIT = 0x8E13 as i32
public const QUERY_NO_WAIT = 0x8E14 as i32
public const QUERY_BY_REGION_WAIT = 0x8E15 as i32
public const QUERY_BY_REGION_NO_WAIT = 0x8E16 as i32
public const QUERY_WAIT_INVERTED = 0x8E17 as i32
public const QUERY_NO_WAIT_INVERTED = 0x8E18 as i32
public const QUERY_BY_REGION_WAIT_INVERTED = 0x8E19 as i32
public const QUERY_BY_REGION_NO_WAIT_INVERTED = 0x8E1A as i32
public const POLYGON_OFFSET_CLAMP = 0x8E1B as i32
public const MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E as i32
public const MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F as i32
public const TRANSFORM_FEEDBACK = 0x8E22 as i32
public const TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23 as i32
public const TRANSFORM_FEEDBACK_PAUSED = 0x8E23 as i32
public const TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24 as i32
public const TRANSFORM_FEEDBACK_ACTIVE = 0x8E24 as i32
public const TRANSFORM_FEEDBACK_BINDING = 0x8E25 as i32
public const TIMESTAMP = 0x8E28 as i32
public const TEXTURE_SWIZZLE_R = 0x8E42 as i32
public const TEXTURE_SWIZZLE_G = 0x8E43 as i32
public const TEXTURE_SWIZZLE_B = 0x8E44 as i32
public const TEXTURE_SWIZZLE_A = 0x8E45 as i32
public const TEXTURE_SWIZZLE_RGBA = 0x8E46 as i32
public const ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47 as i32
public const ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48 as i32
public const ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49 as i32
public const NUM_COMPATIBLE_SUBROUTINES = 0x8E4A as i32
public const COMPATIBLE_SUBROUTINES = 0x8E4B as i32
public const QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C as i32
public const FIRST_VERTEX_CONVENTION = 0x8E4D as i32
public const LAST_VERTEX_CONVENTION = 0x8E4E as i32
public const PROVOKING_VERTEX = 0x8E4F as i32
public const SAMPLE_POSITION = 0x8E50 as i32
public const SAMPLE_MASK = 0x8E51 as i32
public const SAMPLE_MASK_VALUE = 0x8E52 as i32
public const MAX_SAMPLE_MASK_WORDS = 0x8E59 as i32
public const MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A as i32
public const MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B as i32
public const MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C as i32
public const FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D as i32
public const MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E as i32
public const MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F as i32
public const MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70 as i32
public const MAX_VERTEX_STREAMS = 0x8E71 as i32
public const PATCH_VERTICES = 0x8E72 as i32
public const PATCH_DEFAULT_INNER_LEVEL = 0x8E73 as i32
public const PATCH_DEFAULT_OUTER_LEVEL = 0x8E74 as i32
public const TESS_CONTROL_OUTPUT_VERTICES = 0x8E75 as i32
public const TESS_GEN_MODE = 0x8E76 as i32
public const TESS_GEN_SPACING = 0x8E77 as i32
public const TESS_GEN_VERTEX_ORDER = 0x8E78 as i32
public const TESS_GEN_POINT_MODE = 0x8E79 as i32
public const ISOLINES = 0x8E7A as i32
public const FRACTIONAL_ODD = 0x8E7B as i32
public const FRACTIONAL_EVEN = 0x8E7C as i32
public const MAX_PATCH_VERTICES = 0x8E7D as i32
public const MAX_TESS_GEN_LEVEL = 0x8E7E as i32
public const MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F as i32
public const MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80 as i32
public const MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81 as i32
public const MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82 as i32
public const MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83 as i32
public const MAX_TESS_PATCH_COMPONENTS = 0x8E84 as i32
public const MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85 as i32
public const MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86 as i32
public const TESS_EVALUATION_SHADER = 0x8E87 as i32
public const TESS_CONTROL_SHADER = 0x8E88 as i32
public const MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89 as i32
public const MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A as i32
public const COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C as i32
public const COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D as i32
public const COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E as i32
public const COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F as i32
public const COPY_READ_BUFFER = 0x8F36 as i32
public const COPY_READ_BUFFER_BINDING = 0x8F36 as i32
public const COPY_WRITE_BUFFER = 0x8F37 as i32
public const COPY_WRITE_BUFFER_BINDING = 0x8F37 as i32
public const MAX_IMAGE_UNITS = 0x8F38 as i32
public const MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39 as i32
public const MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39 as i32
public const IMAGE_BINDING_NAME = 0x8F3A as i32
public const IMAGE_BINDING_LEVEL = 0x8F3B as i32
public const IMAGE_BINDING_LAYERED = 0x8F3C as i32
public const IMAGE_BINDING_LAYER = 0x8F3D as i32
public const IMAGE_BINDING_ACCESS = 0x8F3E as i32
public const DRAW_INDIRECT_BUFFER = 0x8F3F as i32
public const DRAW_INDIRECT_BUFFER_BINDING = 0x8F43 as i32
public const DOUBLE_MAT2 = 0x8F46 as i32
public const DOUBLE_MAT3 = 0x8F47 as i32
public const DOUBLE_MAT4 = 0x8F48 as i32
public const DOUBLE_MAT2x3 = 0x8F49 as i32
public const DOUBLE_MAT2x4 = 0x8F4A as i32
public const DOUBLE_MAT3x2 = 0x8F4B as i32
public const DOUBLE_MAT3x4 = 0x8F4C as i32
public const DOUBLE_MAT4x2 = 0x8F4D as i32
public const DOUBLE_MAT4x3 = 0x8F4E as i32
public const VERTEX_BINDING_BUFFER = 0x8F4F as i32
public const R8_SNORM = 0x8F94 as i32
public const RG8_SNORM = 0x8F95 as i32
public const RGB8_SNORM = 0x8F96 as i32
public const RGBA8_SNORM = 0x8F97 as i32
public const R16_SNORM = 0x8F98 as i32
public const RG16_SNORM = 0x8F99 as i32
public const RGB16_SNORM = 0x8F9A as i32
public const RGBA16_SNORM = 0x8F9B as i32
public const SIGNED_NORMALIZED = 0x8F9C as i32
public const PRIMITIVE_RESTART = 0x8F9D as i32
public const PRIMITIVE_RESTART_INDEX = 0x8F9E as i32
public const DOUBLE_VEC2 = 0x8FFC as i32
public const DOUBLE_VEC3 = 0x8FFD as i32
public const DOUBLE_VEC4 = 0x8FFE as i32
public const TEXTURE_CUBE_MAP_ARRAY = 0x9009 as i32
public const TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A as i32
public const PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B as i32
public const SAMPLER_CUBE_MAP_ARRAY = 0x900C as i32
public const SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D as i32
public const INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E as i32
public const UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F as i32
public const IMAGE_1D = 0x904C as i32
public const IMAGE_2D = 0x904D as i32
public const IMAGE_3D = 0x904E as i32
public const IMAGE_2D_RECT = 0x904F as i32
public const IMAGE_CUBE = 0x9050 as i32
public const IMAGE_BUFFER = 0x9051 as i32
public const IMAGE_1D_ARRAY = 0x9052 as i32
public const IMAGE_2D_ARRAY = 0x9053 as i32
public const IMAGE_CUBE_MAP_ARRAY = 0x9054 as i32
public const IMAGE_2D_MULTISAMPLE = 0x9055 as i32
public const IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056 as i32
public const INT_IMAGE_1D = 0x9057 as i32
public const INT_IMAGE_2D = 0x9058 as i32
public const INT_IMAGE_3D = 0x9059 as i32
public const INT_IMAGE_2D_RECT = 0x905A as i32
public const INT_IMAGE_CUBE = 0x905B as i32
public const INT_IMAGE_BUFFER = 0x905C as i32
public const INT_IMAGE_1D_ARRAY = 0x905D as i32
public const INT_IMAGE_2D_ARRAY = 0x905E as i32
public const INT_IMAGE_CUBE_MAP_ARRAY = 0x905F as i32
public const INT_IMAGE_2D_MULTISAMPLE = 0x9060 as i32
public const INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061 as i32
public const UNSIGNED_INT_IMAGE_1D = 0x9062 as i32
public const UNSIGNED_INT_IMAGE_2D = 0x9063 as i32
public const UNSIGNED_INT_IMAGE_3D = 0x9064 as i32
public const UNSIGNED_INT_IMAGE_2D_RECT = 0x9065 as i32
public const UNSIGNED_INT_IMAGE_CUBE = 0x9066 as i32
public const UNSIGNED_INT_IMAGE_BUFFER = 0x9067 as i32
public const UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068 as i32
public const UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069 as i32
public const UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A as i32
public const UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B as i32
public const UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C as i32
public const MAX_IMAGE_SAMPLES = 0x906D as i32
public const IMAGE_BINDING_FORMAT = 0x906E as i32
public const RGB10_A2UI = 0x906F as i32
public const MIN_MAP_BUFFER_ALIGNMENT = 0x90BC as i32
public const IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7 as i32
public const IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8 as i32
public const IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9 as i32
public const MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA as i32
public const MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB as i32
public const MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC as i32
public const MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD as i32
public const MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE as i32
public const MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF as i32
public const SHADER_STORAGE_BUFFER = 0x90D2 as i32
public const SHADER_STORAGE_BUFFER_BINDING = 0x90D3 as i32
public const SHADER_STORAGE_BUFFER_START = 0x90D4 as i32
public const SHADER_STORAGE_BUFFER_SIZE = 0x90D5 as i32
public const MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6 as i32
public const MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7 as i32
public const MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8 as i32
public const MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9 as i32
public const MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA as i32
public const MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB as i32
public const MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC as i32
public const MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD as i32
public const MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE as i32
public const SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF as i32
public const DEPTH_STENCIL_TEXTURE_MODE = 0x90EA as i32
public const MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB as i32
public const UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC as i32
public const ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED as i32
public const DISPATCH_INDIRECT_BUFFER = 0x90EE as i32
public const DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF as i32
public const TEXTURE_2D_MULTISAMPLE = 0x9100 as i32
public const PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101 as i32
public const TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102 as i32
public const PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103 as i32
public const TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104 as i32
public const TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105 as i32
public const TEXTURE_SAMPLES = 0x9106 as i32
public const TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107 as i32
public const SAMPLER_2D_MULTISAMPLE = 0x9108 as i32
public const INT_SAMPLER_2D_MULTISAMPLE = 0x9109 as i32
public const UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A as i32
public const SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B as i32
public const INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C as i32
public const UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D as i32
public const MAX_COLOR_TEXTURE_SAMPLES = 0x910E as i32
public const MAX_DEPTH_TEXTURE_SAMPLES = 0x910F as i32
public const MAX_INTEGER_SAMPLES = 0x9110 as i32
public const MAX_SERVER_WAIT_TIMEOUT = 0x9111 as i32
public const OBJECT_TYPE = 0x9112 as i32
public const SYNC_CONDITION = 0x9113 as i32
public const SYNC_STATUS = 0x9114 as i32
public const SYNC_FLAGS = 0x9115 as i32
public const SYNC_FENCE = 0x9116 as i32
public const SYNC_GPU_COMMANDS_COMPLETE = 0x9117 as i32
public const UNSIGNALED = 0x9118 as i32
public const SIGNALED = 0x9119 as i32
public const ALREADY_SIGNALED = 0x911A as i32
public const TIMEOUT_EXPIRED = 0x911B as i32
public const CONDITION_SATISFIED = 0x911C as i32
public const WAIT_FAILED = 0x911D as i32
public const BUFFER_ACCESS_FLAGS = 0x911F as i32
public const BUFFER_MAP_LENGTH = 0x9120 as i32
public const BUFFER_MAP_OFFSET = 0x9121 as i32
public const MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122 as i32
public const MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123 as i32
public const MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124 as i32
public const MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125 as i32
public const CONTEXT_PROFILE_MASK = 0x9126 as i32
public const UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127 as i32
public const UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128 as i32
public const UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129 as i32
public const UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A as i32
public const PACK_COMPRESSED_BLOCK_WIDTH = 0x912B as i32
public const PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C as i32
public const PACK_COMPRESSED_BLOCK_DEPTH = 0x912D as i32
public const PACK_COMPRESSED_BLOCK_SIZE = 0x912E as i32
public const TEXTURE_IMMUTABLE_FORMAT = 0x912F as i32
public const MAX_DEBUG_MESSAGE_LENGTH = 0x9143 as i32
public const MAX_DEBUG_LOGGED_MESSAGES = 0x9144 as i32
public const DEBUG_LOGGED_MESSAGES = 0x9145 as i32
public const DEBUG_SEVERITY_HIGH = 0x9146 as i32
public const DEBUG_SEVERITY_MEDIUM = 0x9147 as i32
public const DEBUG_SEVERITY_LOW = 0x9148 as i32
public const QUERY_BUFFER = 0x9192 as i32
public const QUERY_BUFFER_BINDING = 0x9193 as i32
public const QUERY_RESULT_NO_WAIT = 0x9194 as i32
public const TEXTURE_BUFFER_OFFSET = 0x919D as i32
public const TEXTURE_BUFFER_SIZE = 0x919E as i32
public const TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F as i32
public const COMPUTE_SHADER = 0x91B9 as i32
public const MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB as i32
public const MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC as i32
public const MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD as i32
public const MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE as i32
public const MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF as i32
public const COMPRESSED_R11_EAC = 0x9270 as i32
public const COMPRESSED_SIGNED_R11_EAC = 0x9271 as i32
public const COMPRESSED_RG11_EAC = 0x9272 as i32
public const COMPRESSED_SIGNED_RG11_EAC = 0x9273 as i32
public const COMPRESSED_RGB8_ETC2 = 0x9274 as i32
public const COMPRESSED_SRGB8_ETC2 = 0x9275 as i32
public const COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276 as i32
public const COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277 as i32
public const COMPRESSED_RGBA8_ETC2_EAC = 0x9278 as i32
public const COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279 as i32
public const ATOMIC_COUNTER_BUFFER = 0x92C0 as i32
public const ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1 as i32
public const ATOMIC_COUNTER_BUFFER_START = 0x92C2 as i32
public const ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3 as i32
public const ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4 as i32
public const ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5 as i32
public const ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6 as i32
public const ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7 as i32
public const ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8 as i32
public const ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9 as i32
public const ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA as i32
public const ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB as i32
public const MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC as i32
public const MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD as i32
public const MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE as i32
public const MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF as i32
public const MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0 as i32
public const MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1 as i32
public const MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2 as i32
public const MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3 as i32
public const MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4 as i32
public const MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5 as i32
public const MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6 as i32
public const MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7 as i32
public const MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8 as i32
public const ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9 as i32
public const UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA as i32
public const UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB as i32
public const MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC as i32
public const DEBUG_OUTPUT = 0x92E0 as i32
public const UNIFORM = 0x92E1 as i32
public const UNIFORM_BLOCK = 0x92E2 as i32
public const PROGRAM_INPUT = 0x92E3 as i32
public const PROGRAM_OUTPUT = 0x92E4 as i32
public const BUFFER_VARIABLE = 0x92E5 as i32
public const SHADER_STORAGE_BLOCK = 0x92E6 as i32
public const IS_PER_PATCH = 0x92E7 as i32
public const VERTEX_SUBROUTINE = 0x92E8 as i32
public const TESS_CONTROL_SUBROUTINE = 0x92E9 as i32
public const TESS_EVALUATION_SUBROUTINE = 0x92EA as i32
public const GEOMETRY_SUBROUTINE = 0x92EB as i32
public const FRAGMENT_SUBROUTINE = 0x92EC as i32
public const COMPUTE_SUBROUTINE = 0x92ED as i32
public const VERTEX_SUBROUTINE_UNIFORM = 0x92EE as i32
public const TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF as i32
public const TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0 as i32
public const GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1 as i32
public const FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2 as i32
public const COMPUTE_SUBROUTINE_UNIFORM = 0x92F3 as i32
public const TRANSFORM_FEEDBACK_VARYING = 0x92F4 as i32
public const ACTIVE_RESOURCES = 0x92F5 as i32
public const MAX_NAME_LENGTH = 0x92F6 as i32
public const MAX_NUM_ACTIVE_VARIABLES = 0x92F7 as i32
public const MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8 as i32
public const NAME_LENGTH = 0x92F9 as i32
public const TYPE = 0x92FA as i32
public const ARRAY_SIZE = 0x92FB as i32
public const OFFSET = 0x92FC as i32
public const BLOCK_INDEX = 0x92FD as i32
public const ARRAY_STRIDE = 0x92FE as i32
public const MATRIX_STRIDE = 0x92FF as i32
public const IS_ROW_MAJOR = 0x9300 as i32
public const ATOMIC_COUNTER_BUFFER_INDEX = 0x9301 as i32
public const BUFFER_BINDING = 0x9302 as i32
public const BUFFER_DATA_SIZE = 0x9303 as i32
public const NUM_ACTIVE_VARIABLES = 0x9304 as i32
public const ACTIVE_VARIABLES = 0x9305 as i32
public const REFERENCED_BY_VERTEX_SHADER = 0x9306 as i32
public const REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307 as i32
public const REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308 as i32
public const REFERENCED_BY_GEOMETRY_SHADER = 0x9309 as i32
public const REFERENCED_BY_FRAGMENT_SHADER = 0x930A as i32
public const REFERENCED_BY_COMPUTE_SHADER = 0x930B as i32
public const TOP_LEVEL_ARRAY_SIZE = 0x930C as i32
public const TOP_LEVEL_ARRAY_STRIDE = 0x930D as i32
public const LOCATION = 0x930E as i32
public const LOCATION_INDEX = 0x930F as i32
public const FRAMEBUFFER_DEFAULT_WIDTH = 0x9310 as i32
public const FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311 as i32
public const FRAMEBUFFER_DEFAULT_LAYERS = 0x9312 as i32
public const FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313 as i32
public const FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314 as i32
public const MAX_FRAMEBUFFER_WIDTH = 0x9315 as i32
public const MAX_FRAMEBUFFER_HEIGHT = 0x9316 as i32
public const MAX_FRAMEBUFFER_LAYERS = 0x9317 as i32
public const MAX_FRAMEBUFFER_SAMPLES = 0x9318 as i32
public const LOCATION_COMPONENT = 0x934A as i32
public const TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B as i32
public const TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C as i32
public const CLIP_ORIGIN = 0x935C as i32
public const CLIP_DEPTH_MODE = 0x935D as i32
public const NEGATIVE_ONE_TO_ONE = 0x935E as i32
public const ZERO_TO_ONE = 0x935F as i32
public const CLEAR_TEXTURE = 0x9365 as i32
public const NUM_SAMPLE_COUNTS = 0x9380 as i32
public const SHADER_BINARY_FORMAT_SPIR_V = 0x9551 as i32
public const SPIR_V_BINARY = 0x9552 as i32
public const SPIR_V_EXTENSIONS = 0x9553 as i32
public const NUM_SPIR_V_EXTENSIONS = 0x9554 as i32
